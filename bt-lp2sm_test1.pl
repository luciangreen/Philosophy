:-include('../SSI/ssi.pl').
:-include('../State-Machine-to-List-Prolog/sm_to_lp.pl').

% back-translates List Prolog to State Machines

% bt-lp2sm_test(A,B).
% A - output: total tests
% B - output: total correct results

% bt-lp2sm_test1(N,B).
% N - input: number to test
% B - output: result


%?- numbers(247,1,[],N),findall(["lp2sm_test(",N1,",",Functions2b,",",Functions3b,").\n"],(member(N1,N),(once((test(N1,Q,F,R),query_box(Q,Query1,Functions,Functions1),convert_to_grammar_part1(Functions1,[],Functions2,_),add_line_numbers_to_algorithm1(Functions2,Functions2a),find_pred_numbers(Functions2a,[]                           ,Pred_numbers),retractall(pred_numbers(_)),assertz(pred_numbers(Pred_numbers)),find_state_machine1(Functions2a,Functions3,Pred_numbers),sm_to_lp(Functions3,Functions4),term_to_atom(Functions2,Functions2b),term_to_atom(Functions3,Functions3b))))),A),foldr(append,A,B1),foldr(string_concat,B1,B),writeln(B).


lp2sm_test(1,[[[n,query_box_1],[],":-",[[[n,function]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[]]]]]).
lp2sm_test(2,[[[n,query_box_1],[[v,c]],":-",[[[n,function],[1,1,[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[1,1,[v,c]]]]]]).
lp2sm_test(3,[[[n,query_box_1],[[v,c]],":-",[[[n,function],[1,1,[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[1,1,[v,c]]]]]]).
lp2sm_test(4,[[[n,query_box_1],[[v,a]],":-",[[[n,append1],[[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append1],[[v,a]]]]]]).
lp2sm_test(5,[[[n,query_box_1],[[v,n]],":-",[[[n,count],[1,[v,n]]]]]],[[0,[n,query_box_1],[[v,n]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,count],[1,[v,n]]]]]]).
lp2sm_test(6,[[[n,query_box_1],[[v,n]],":-",[[[n,count],[0,[v,n]]]]]],[[0,[n,query_box_1],[[v,n]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,count],[0,[v,n]]]]]]).
lp2sm_test(7,[[[n,query_box_1],[[v,l]],":-",[[[n,reverse],[[1,2,3],[],[v,l]]]]]],[[0,[n,query_box_1],[[v,l]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,reverse],[[1,2,3],[],[v,l]]]]]]).
lp2sm_test(8,[[[n,query_box_1],[],":-",[[[n,grammar1],["apple"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["apple"]]]]]).
lp2sm_test(9,[[[n,query_box_1],[],":-",[[[n,grammar1],["aaa"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["aaa"]]]]]).
lp2sm_test(10,[[[n,query_box_1],[[v,t]],":-",[[[n,grammar1],["aa",[v,t]]]]]],[[0,[n,query_box_1],[[v,t]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["aa",[v,t]]]]]]).
lp2sm_test(11,[[[n,query_box_1],[[v,t],[v,u]],":-",[[[n,grammar1],["aa",[v,t],[v,u]]]]]],[[0,[n,query_box_1],[[v,t],[v,u]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["aa",[v,t],[v,u]]]]]]).
lp2sm_test(12,[[[n,query_box_1],[],":-",[[[n,grammar1],["aa"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["aa"]]]]]).
lp2sm_test(13,[[[n,query_box_1],[[v,t]],":-",[[[n,grammar1],["[a,a]",[v,t]]]]]],[[0,[n,query_box_1],[[v,t]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["[a,a]",[v,t]]]]]]).
lp2sm_test(14,[[[n,query_box_1],[[v,t]],":-",[[[n,grammar1],["[a]",[v,t]]]]]],[[0,[n,query_box_1],[[v,t]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["[a]",[v,t]]]]]]).
lp2sm_test(15,[[[n,query_box_1],[[v,t]],":-",[[[n,grammar1],["[[""aa,]"",b,""c"",[]],1]",[v,t]]]]]],[[0,[n,query_box_1],[[v,t]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["[[""aa,]"",b,""c"",[]],1]",[v,t]]]]]]).
lp2sm_test(16,[[[n,query_box_1],[],":-",[[[n,grammar1],["john ate the apple"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["john ate the apple"]]]]]).
lp2sm_test(17,[[[n,query_box_1],[[v,t]],":-",[[[n,grammar1],["aaa1 ,-'! a? b! b.",[v,t]]]]]],[[0,[n,query_box_1],[[v,t]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["aaa1 ,-'! a? b! b.",[v,t]]]]]]).
lp2sm_test(18,[[[n,query_box_1],[[v,c]],":-",[[[n,grammar1],["what is 1+11",[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["what is 1+11",[v,c]]]]]]).
lp2sm_test(19,[[[n,query_box_1],[[v,s]],":-",[[[n,positivityscore],[["not","you","like","a","walk"],["would","you","like","a","walk"],0,[v,s]]]]]],[[0,[n,query_box_1],[[v,s]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,positivityscore],[["not","you","like","a","walk"],["would","you","like","a","walk"],0,[v,s]]]]]]).
lp2sm_test(20,[[[n,query_box_1],[[v,c]],":-",[[[n,function],[1,1,[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[1,1,[v,c]]]]]]).
lp2sm_test(21,[[[n,query_box_1],[[v,t]],":-",[[[n,grammar1],["ate",[v,t]]]]]],[[0,[n,query_box_1],[[v,t]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["ate",[v,t]]]]]]).
lp2sm_test(22,[[[n,query_box_1],[],":-",[[[n,grammar1],["peter cut the pear"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["peter cut the pear"]]]]]).
lp2sm_test(23,[[[n,query_box_1],[[v,s]],":-",[[[n,agree],[["a","b","c"],["d","e","f"],["a","b","c","g"],[v,s]]]]]],[[0,[n,query_box_1],[[v,s]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,agree],[["a","b","c"],["d","e","f"],["a","b","c","g"],[v,s]]]]]]).
lp2sm_test(24,[[[n,query_box_1],[[v,s]],":-",[[[n,modus_ponens],["a",[["a","b"],["c","d"],["e","f"]],[v,s]]]]]],[[0,[n,query_box_1],[[v,s]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,modus_ponens],["a",[["a","b"],["c","d"],["e","f"]],[v,s]]]]]]).
lp2sm_test(25,[[[n,query_box_1],[[v,s]],":-",[[[n,grammar1],["aaa1 ,-'
a
b
b
","aaa1 ,-'
a
b
a",[v,s]]]]]],[[0,[n,query_box_1],[[v,s]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["aaa1 ,-'
a
b
b
","aaa1 ,-'
a
b
a",[v,s]]]]]]).
lp2sm_test(26,[[[n,query_box_1],[[v,s]],":-",[[[n,append1],[["a"],["b"],[v,s]]]]]],[[0,[n,query_box_1],[[v,s]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append1],[["a"],["b"],[v,s]]]]]]).
lp2sm_test(27,[[[n,query_box_1],[],":-",[[[n,equals11],["a","a"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals11],["a","a"]]]]]).
lp2sm_test(28,[[[n,query_box_1],[],":-",[[[n,number11],[1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,number11],[1]]]]]).
lp2sm_test(29,[[[n,query_box_1],[[v,c]],":-",[[[n,minus11],[[1,2,3],[3],[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,minus11],[[1,2,3],[3],[v,c]]]]]]).
lp2sm_test(30,[[[n,query_box_1],[[v,b]],":-",[[[n,if11],[1,[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,if11],[1,[v,b]]]]]]).
lp2sm_test(31,[[[n,query_box_1],[],":-",[[[n,not11],[1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,not11],[1]]]]]).
lp2sm_test(32,[[[n,query_box_1],[],":-",[[[n,or11],[1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,or11],[1]]]]]).
lp2sm_test(33,[[[n,query_box_1],[],":-",[[[n,downpipe],[3,1,[[3,[4,2]],[2,[3,1]]]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,downpipe],[3,1,[[3,[4,2]],[2,[3,1]]]]]]]]).
lp2sm_test(34,[[[n,query_box_1],[[v,c]],":-",[[[n,getitemn],[3,[1,2,3],[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,getitemn],[3,[1,2,3],[v,c]]]]]]).
lp2sm_test(35,[[[n,query_box_1],[],":-",[[[n,identical],[1,2]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,identical],[1,2]]]]]).
lp2sm_test(36,[[[n,query_box_1],[],":-",[[[n,associative],[1,2,3]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,associative],[1,2,3]]]]]).
lp2sm_test(37,[[[n,query_box_1],[[v,l]],":-",[[[n,length1],[[1],0,[v,l]]]]]],[[0,[n,query_box_1],[[v,l]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,length1],[[1],0,[v,l]]]]]]).
lp2sm_test(38,[[[n,query_box_1],[[v,d]],":-",[[[n,optimise1],[[[5,4],[3,2],[1,0]],[v,d]]]]]],[[0,[n,query_box_1],[[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,optimise1],[[[5,4],[3,2],[1,0]],[v,d]]]]]]).
lp2sm_test(39,[[[n,query_box_1],[],":-",[[[n,member1a],[1,[1,2]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,member1a],[1,[1,2]]]]]]).
lp2sm_test(40,[[[n,query_box_1],[[v,a]],":-",[[[n,minus1],[[1,2,3],[1,2],[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,minus1],[[1,2,3],[1,2],[v,a]]]]]]).
lp2sm_test(41,[[[n,query_box_1],[],":-",[[[n,part_of_string],[[1,2,3,4],[2,3]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,part_of_string],[[1,2,3,4],[2,3]]]]]]).
lp2sm_test(42,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,findall],[[v,b],[[[n,or12],[[v,b]]]],[v,a]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[v,b],[v,a]]],[1,[on_true,2],[go_after,[findall_exit_function,0]],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,"[]"]],[2,[on_true,[exit_function,1]],[go_after,-],[on_false,[fail_function,1]],[go_to_predicates,-],[n,or12],[[v,b]]]]]]).
lp2sm_test(43,[[[n,query_box_1],[[v,a]],":-",[[[n,intersection1],[[1,2,3],[3,4,5],[],[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,intersection1],[[1,2,3],[3,4,5],[],[v,a]]]]]]).
lp2sm_test(44,[[[n,query_box_1],[[v,a]],":-",[[[n,delete2],[[1,1,2],1,[],[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,delete2],[[1,1,2],1,[],[v,a]]]]]]).
lp2sm_test(45,[[[n,query_box_1],[],":-",[[[n,greaterthan],[3,2]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,greaterthan],[3,2]]]]]).
lp2sm_test(46,[[[n,query_box_1],[[v,c]],":-",[[[n,conjunction],["true","false",[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,conjunction],["true","false",[v,c]]]]]]).
lp2sm_test(47,[[[n,query_box_1],[[v,l]],":-",[[[n,sum],[[3,1,2],0,[v,l]]]]]],[[0,[n,query_box_1],[[v,l]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,sum],[[3,1,2],0,[v,l]]]]]]).
lp2sm_test(48,[[[n,query_box_1],[[v,l]],":-",[[[n,sort0],[[9,4,8,2,1,5,7,6,3,10],[v,l]]]]]],[[0,[n,query_box_1],[[v,l]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,sort0],[[9,4,8,2,1,5,7,6,3,10],[v,l]]]]]]).
lp2sm_test(49,[[[n,query_box_1],[[v,m]],":-",[[[n,maximum0],[[2,1,3,5,-1],[v,m]]]]]],[[0,[n,query_box_1],[[v,m]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,maximum0],[[2,1,3,5,-1],[v,m]]]]]]).
lp2sm_test(50,[[[n,query_box_1],[[v,c]],":-",[[[n,disjunction],["true","false",[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,disjunction],["true","false",[v,c]]]]]]).
lp2sm_test(51,[[[n,query_box_1],[[v,c]],":-",[[[n,expressionnotheadache],["true",[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,expressionnotheadache],["true",[v,c]]]]]]).
lp2sm_test(52,[[[n,query_box_1],[[v,c]],":-",[[[n,mainrole],[7,[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,mainrole],[7,[v,c]]]]]]).
lp2sm_test(53,[[[n,query_box_1],[[v,c]],":-",[[[n,function],[[[n,function2],[2]],1,1,[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[[[n,function2],[2]],1,1,[v,c]]]]]]).
lp2sm_test(54,[[[n,query_box_1],[[v,c]],":-",[[[n,function],[[[n,function2],[2]],1,1,[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[[[n,function2],[2]],1,1,[v,c]]]]]]).
lp2sm_test(55,[[[n,query_box_1],[[v,c]],":-",[[[n,test1],[[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,test1],[[v,c]]]]]]).
lp2sm_test(56,[[[n,query_box_1],[[v,d]],":-",[[[n,map],[[n,add],[1,2,3],0,[v,d]]]]]],[[0,[n,query_box_1],[[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,map],[[n,add],[1,2,3],0,[v,d]]]]]]).
lp2sm_test(57,[[[n,query_box_1],[[v,d]],":-",[[[n,findall1],[[n,plusone],[1,2,3],[],[v,d]]]]]],[[0,[n,query_box_1],[[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[n,plusone],[1,2,3],[],[v,d]]]]]]).
lp2sm_test(58,[[[n,query_box_1],[[v,d]],":-",[[[n,findall1],[[n,a_to_c],["a","b","a"],[],[v,d]]]]]],[[0,[n,query_box_1],[[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[n,a_to_c],["a","b","a"],[],[v,d]]]]]]).
lp2sm_test(59,[[[n,query_box_1],[[v,n]],":-",[[[n,count],[1,[v,n]]]]]],[[0,[n,query_box_1],[[v,n]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,count],[1,[v,n]]]]]]).
lp2sm_test(60,[[[n,query_box_1],[],":-",[[[n,a]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,a],[]]]]]).
lp2sm_test(61,[[[n,query_box_1],[[v,l]],":-",[[[n,add],[[1,2,3],3,[],[v,l]]]]]],[[0,[n,query_box_1],[[v,l]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add],[[1,2,3],3,[],[v,l]]]]]]).
lp2sm_test(62,[[[n,query_box_1],[[v,l]],":-",[[[n,add],[[1],[2,3],[v,l]]]]]],[[0,[n,query_box_1],[[v,l]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add],[[1],[2,3],[v,l]]]]]]).
lp2sm_test(63,[[[n,query_box_1],[[v,b]],":-",[[[n,add],[1,[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add],[1,[v,b]]]]]]).
lp2sm_test(64,[[[n,query_box_1],[[v,b]],":-",[[[n,add0],[[1,2],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[[1,2],[v,b]]]]]]).
lp2sm_test(65,[[[n,query_box_1],[[v,b]],":-",[[[n,add0],[[1],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[[1],[v,b]]]]]]).
lp2sm_test(66,[[[n,query_box_1],[],":-",[[[n,addorsubtract1],[2,1,1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,addorsubtract1],[2,1,1]]]]]).
lp2sm_test(67,[[[n,query_box_1],[],":-",[[[n,addorsubtract1],[2,1,1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,addorsubtract1],[2,1,1]]]]]).
lp2sm_test(68,[[[n,query_box_1],[],":-",[[[n,addorsubtract1],[2,1,1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,addorsubtract1],[2,1,1]]]]]).
lp2sm_test(69,[[[n,query_box_1],[],":-",[[[n,add0],[2,1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[2,1]]]]]).
lp2sm_test(70,[[[n,query_box_1],[],":-",[[[n,add0],[1,2]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[1,2]]]]]).
lp2sm_test(71,[[[n,query_box_1],[],":-",[[[n,add0],[1,2]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[1,2]]]]]).
lp2sm_test(72,[[[n,query_box_1],[[v,b]],":-",[[[n,add0],[1,[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[1,[v,b]]]]]]).
lp2sm_test(73,[[[n,query_box_1],[[v,c]],":-",[[[n,add0],[1,1,[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[1,1,[v,c]]]]]]).
lp2sm_test(74,[[[n,query_box_1],[[v,c]],":-",[[[n,add0],[[1,2],[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[[1,2],[v,c]]]]]]).
lp2sm_test(75,[[[n,query_box_1],[[v,c]],":-",[[[n,add0],[[],[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[[],[v,c]]]]]]).
lp2sm_test(76,[[[n,query_box_1],[[v,b]],":-",[[[n,implies2],[1,[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,implies2],[1,[v,b]]]]]]).
lp2sm_test(77,[[[n,query_box_1],[[v,b]],":-",[[[n,findall1],[[1,2,3],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[1,2,3],[v,b]]]]]]).
lp2sm_test(78,[[[n,query_box_1],[[v,b]],":-",[[[n,maplist1],[[1,2,3],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,maplist1],[[1,2,3],[v,b]]]]]]).
lp2sm_test(79,[[[n,query_box_1],[[v,b]],":-",[[[n,equals41],[[1,2,3],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[1,2,3],[v,b]]]]]]).
lp2sm_test(80,[[[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[[n,equals41],[[v,a],[v,d],[v,c],[v,b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,d],[v,c],[v,b]]]]]]).
lp2sm_test(81,[[[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[[n,equals41],[[v,a],[v,c],[v,b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,c],[v,b]]]]]]).
lp2sm_test(82,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,equals41],[[v,a],[v,b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,b]]]]]]).
lp2sm_test(83,[[[n,query_box_1],[],":-",[[[n,equals41]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[]]]]]).
lp2sm_test(84,[[[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[[n,equals41],[[v,a],[v,c],[v,b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,c],[v,b]]]]]]).
lp2sm_test(85,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,equals41],[[v,a],[v,b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,b]]]]]]).
lp2sm_test(86,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,equals41],[[v,a],[v,b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,b]]]]]]).
lp2sm_test(87,[[[n,query_box_1],[[v,a]],":-",[[[n,equals41],[[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a]]]]]]).
lp2sm_test(88,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,equals41],[[v,a],[v,b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,b]]]]]]).
lp2sm_test(89,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,equals41],[[v,a],[v,b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,b]]]]]]).
lp2sm_test(90,[[[n,query_box_1],[],":-",[[[n,equals41]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[]]]]]).
lp2sm_test(91,[[[n,query_box_1],[],":-",[[[n,equals41],[[1,2,3]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[1,2,3]]]]]]).
lp2sm_test(92,[[[n,query_box_1],[[v,a],[v,b],[v,d]],":-",[[[n,equals41],[[v,a],[v,b],[v,d]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,b],[v,d]]]]]]).
lp2sm_test(93,[[[n,query_box_1],[[v,b]],":-",[[[n,maplist1],[[[1],[2],[3]],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,maplist1],[[[1],[2],[3]],[v,b]]]]]]).
lp2sm_test(94,[[[n,query_box_1],[[v,b]],":-",[[[n,maplist1],[[[[1]],[[2]],[[3]]],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,maplist1],[[[[1]],[[2]],[[3]]],[v,b]]]]]]).
lp2sm_test(95,[[[n,query_box_1],[[v,b]],":-",[[[n,findall1],[[1,2,3],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[1,2,3],[v,b]]]]]]).
lp2sm_test(96,[[[n,query_box_1],[[v,b]],":-",[[[n,equals41],[1,[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[1,[v,b]]]]]]).
lp2sm_test(97,[[[n,query_box_1],[[v,a]],":-",[[[n,equals41],[[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a]]]]]]).
lp2sm_test(98,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,equals41],[[[1,2],3,4],[v,a],[v,b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[1,2],3,4],[v,a],[v,b]]]]]]).
lp2sm_test(99,[[[n,query_box_1],[[v,b]],":-",[[[n,equals41],[1,[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[1,[v,b]]]]]]).
lp2sm_test(100,[[[n,query_box_1],[[v,b],[v,c]],":-",[[[n,equals41],[1,[v,c],[v,b]]]]]],[[0,[n,query_box_1],[[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[1,[v,c],[v,b]]]]]]).
lp2sm_test(101,[[[n,query_box_1],[[v,b],[v,c]],":-",[[[n,equals41],[1,[v,c],[v,b]]]]]],[[0,[n,query_box_1],[[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[1,[v,c],[v,b]]]]]]).
lp2sm_test(102,[[[n,query_box_1],[[v,b1],[v,b2],[v,b3]],":-",[[[n,equals41],[1,[2,3],[v,b1],[v,b2],[v,b3]]]]]],[[0,[n,query_box_1],[[v,b1],[v,b2],[v,b3]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[1,[2,3],[v,b1],[v,b2],[v,b3]]]]]]).
lp2sm_test(103,[[[n,query_box_1],[[v,b1],[v,b2],[v,b3]],":-",[[[n,equals41],[1,[2,3],[v,b1],[v,b2],[v,b3]]]]]],[[0,[n,query_box_1],[[v,b1],[v,b2],[v,b3]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[1,[2,3],[v,b1],[v,b2],[v,b3]]]]]]).
lp2sm_test(104,[[[n,query_box_1],[[v,b]],":-",[[[n,findall1],[[[1,2],[3,4]],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[[1,2],[3,4]],[v,b]]]]]]).
lp2sm_test(105,[[[n,query_box_1],[[v,b]],":-",[[[n,member2a],[[v,b],[1,11,111]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,member2a],[[v,b],[1,11,111]]]]]]).
lp2sm_test(106,[[[n,query_box_1],[[v,b]],":-",[[[n,call1a],[[v,b],[1,11,111]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,call1a],[[v,b],[1,11,111]]]]]]).
lp2sm_test(107,[[[n,query_box_1],[[v,b]],":-",[[[n,call1b],[[1,11,111],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,call1b],[[1,11,111],[v,b]]]]]]).
lp2sm_test(108,[[[n,query_box_1],[[v,b]],":-",[[[n,call1b],[[1,11,111],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,call1b],[[1,11,111],[v,b]]]]]]).
lp2sm_test(109,[[[n,query_box_1],[[v,b]],":-",[[[n,middle],[2,[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,middle],[2,[v,b]]]]]]).
lp2sm_test(110,[[[n,query_box_1],[[v,b]],":-",[[[n,level_with],[170,[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,level_with],[170,[v,b]]]]]]).
lp2sm_test(111,[[[n,query_box_1],[[v,a]],":-",[[[n,tra_las],[5,[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,tra_las],[5,[v,a]]]]]]).
lp2sm_test(112,[[[n,query_box_1],[[v,a]],":-",[[[n,final_gong],[5,[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,final_gong],[5,[v,a]]]]]]).
lp2sm_test(113,[[[n,query_box_1],[[v,b]],":-",[[[n,bedroom_to_garden],["bedroom",[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,bedroom_to_garden],["bedroom",[v,b]]]]]]).
lp2sm_test(114,[[[n,query_box_1],[[v,a]],":-",[[[n,stop_at_top],[["-","-","-","top"],[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,stop_at_top],[["-","-","-","top"],[v,a]]]]]]).
lp2sm_test(115,[[[n,query_box_1],[[v,result]],":-",[[[n,function],[[["n1","a"]],[["a",5]],[],[v,result]]]]]],[[0,[n,query_box_1],[[v,result]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[[["n1","a"]],[["a",5]],[],[v,result]]]]]]).
lp2sm_test(116,[[[n,query_box_1],[[v,t]],":-",[[[n,grammar1],[".aaa.bbb.",[".","?"],[v,t]]]]]],[[0,[n,query_box_1],[[v,t]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],[".aaa.bbb.",[".","?"],[v,t]]]]]]).
lp2sm_test(117,[[[n,query_box_1],[[v,t]],":-",[[[n,grammar1],["a   a. a ",[" ","."],[v,t]]]]]],[[0,[n,query_box_1],[[v,t]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["a   a. a ",[" ","."],[v,t]]]]]]).
lp2sm_test(118,[[[n,query_box_1],[],":-",[[[n,query_pred]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,query_pred],[]]]]]).
lp2sm_test(119,[[[n,query_box_1],[],":-",[[[n,count],[2]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,count],[2]]]]]).
lp2sm_test(120,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,function],[1,[v,b],2,[v,a]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[1,[v,b],2,[v,a]]]]]]).
lp2sm_test(121,[[[n,query_box_1],[[v,a]],":-",[[[n,append1],[[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append1],[[v,a]]]]]]).
lp2sm_test(122,[[[n,query_box_1],[],":-",[[[n,equals4_on1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals4_on1],[]]]]]).
lp2sm_test(123,[[[n,query_box_1],[[v,b],[v,c]],":-",[[[n,equals41],[[[v,b],"|",[v,c]]]]]]],[[0,[n,query_box_1],[[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,b],"|",[v,c]]]]]]]).
lp2sm_test(124,[[[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[[n,equals41],[[[[v,a],"|",[v,d]],[v,c],"|",[v,b]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[[v,a],"|",[v,d]],[v,c],"|",[v,b]]]]]]]).
lp2sm_test(125,[[[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[[n,equals41],[[[[v,a],[v,c]],"|",[v,b]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[[v,a],[v,c]],"|",[v,b]]]]]]]).
lp2sm_test(126,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,equals41],[[[v,a],"|",[v,b]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a],"|",[v,b]]]]]]]).
lp2sm_test(127,[[[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[[n,equals41],[[[v,a],[v,c],"|",[v,b],[v,d]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a],[v,c],"|",[v,b],[v,d]]]]]]]).
lp2sm_test(128,[[[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[[n,equals41],[[[[v,a]],[v,c],"|",[v,b]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[[v,a]],[v,c],"|",[v,b]]]]]]]).
lp2sm_test(129,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,equals41],[[[v,a],"|",[v,b]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a],"|",[v,b]]]]]]]).
lp2sm_test(130,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,equals41],[[[v,a],"|",[[v,b]]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a],"|",[[v,b]]]]]]]]).
lp2sm_test(131,[[[n,query_box_1],[[v,a]],":-",[[[n,equals41],[[[v,a]]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a]]]]]]]).
lp2sm_test(132,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,equals41],[[[v,a],[v,b]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a],[v,b]]]]]]]).
lp2sm_test(133,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,equals41],[[[v,a],[v,b]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a],[v,b]]]]]]]).
lp2sm_test(134,[[[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[[n,equals41],[[[v,a],[v,c],"|",[v,b],"|",[v,d]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a],[v,c],"|",[v,b],"|",[v,d]]]]]]]).
lp2sm_test(135,[[[n,query_box_1],[],":-",[[[n,equals41],[[1,2,3]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[1,2,3]]]]]]).
lp2sm_test(136,[[[n,query_box_1],[[v,a],[v,b],[v,d]],":-",[[[n,equals41],[[[v,a],"|",[[v,b],"|",[v,d]]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a],"|",[[v,b],"|",[v,d]]]]]]]]).
lp2sm_test(137,[[[n,query_box_1],[[v,b]],":-",[[[n,equals41],[[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,b]]]]]]).
lp2sm_test(138,[[[n,query_box_1],[],":-",[[[n,equals41]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[]]]]]).
lp2sm_test(139,[[[n,query_box_1],[[v,a],[v,d]],":-",[[[n,append1],[[v,a],[v,d]]]]]],[[0,[n,query_box_1],[[v,a],[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append1],[[v,a],[v,d]]]]]]).
lp2sm_test(140,[[[n,query_box_1],[[v,b]],":-",[[[n,equals41],[[1,2,3],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[1,2,3],[v,b]]]]]]).
lp2sm_test(141,[[[n,query_box_1],[[v,b]],":-",[[[n,equals41],[[1,2,3],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[1,2,3],[v,b]]]]]]).
lp2sm_test(142,[[[n,query_box_1],[[v,b]],":-",[[[n,equals41],[[1,2,3],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[1,2,3],[v,b]]]]]]).
lp2sm_test(143,[[[n,query_box_1],[[v,b]],":-",[[[n,equals41],[[1,2,3],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[1,2,3],[v,b]]]]]]).
lp2sm_test(144,[[[n,query_box_1],[[v,b]],":-",[[[n,equals41],[[1,2,3],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[1,2,3],[v,b]]]]]]).
lp2sm_test(145,[[[n,query_box_1],[[v,c]],":-",[[[n,equals41],[[[1,2,3]],[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[1,2,3]],[v,c]]]]]]).
lp2sm_test(146,[[[n,query_box_1],[[v,c]],":-",[[[n,equals41],[[[1,2,3],4,5],[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[1,2,3],4,5],[v,c]]]]]]).
lp2sm_test(147,[[[n,query_box_1],[[v,c]],":-",[[[n,equals41],[[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,c]]]]]]).
lp2sm_test(148,[[[n,query_box_1],[[v,c]],":-",[[[n,equals41],[[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,c]]]]]]).
lp2sm_test(149,[[[n,query_box_1],[[v,b],[v,c]],":-",[[[n,equals41],[[[1,2,3]],[v,b],[v,c]]]]]],[[0,[n,query_box_1],[[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[1,2,3]],[v,b],[v,c]]]]]]).
lp2sm_test(150,[[[n,query_box_1],[[v,c]],":-",[[[n,equals41],[[[4,5,6]],[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[4,5,6]],[v,c]]]]]]).
lp2sm_test(151,[[[n,query_box_1],[[v,c]],":-",[[[n,equals41],[[[6,2,3],[5]],[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[6,2,3],[5]],[v,c]]]]]]).
lp2sm_test(152,[[[n,query_box_1],[[v,c]],":-",[[[n,equals41],[[6,2,3],[1,2,3],[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[6,2,3],[1,2,3],[v,c]]]]]]).
lp2sm_test(153,[[[n,query_box_1],[[v,c]],":-",[[[n,equals41],[[[4,5,6]],[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[4,5,6]],[v,c]]]]]]).
lp2sm_test(154,[[[n,query_box_1],[[v,c]],":-",[[[n,equals41],[[[4,5,6]],[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[4,5,6]],[v,c]]]]]]).
lp2sm_test(155,[[[n,query_box_1],[[v,a]],":-",[[[n,equals41],[[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a]]]]]]).
lp2sm_test(156,[[[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[[n,equals42],[[v,a],[[v,b],[v,c]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals42],[[v,a],[[v,b],[v,c]]]]]]]).
lp2sm_test(157,[[[n,query_box_1],[[v,a]],":-",[[[n,equals41],[[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a]]]]]]).
lp2sm_test(158,[[[n,query_box_1],[[v,a]],":-",[[[n,equals41],[[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a]]]]]]).
lp2sm_test(159,[[[n,query_box_1],[],":-",[[[n,equals41]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[]]]]]).
lp2sm_test(160,[[[n,query_box_1],[[v,c]],":-",[[[n,function],[1,1,[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[1,1,[v,c]]]]]]).
lp2sm_test(161,[[[n,query_box_1],[[v,c]],":-",[[[n,function],[1,1,[v,c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[1,1,[v,c]]]]]]).
lp2sm_test(162,[[[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[[n,equals41],[[v,a],[v,b],[v,c]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,b],[v,c]]]]]]).
lp2sm_test(163,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,function1],[[v,a],[v,a],[v,b],[v,b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[v,a],[v,a],[v,b],[v,b]]]]]]).
lp2sm_test(164,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,function1],[[v,a],[v,a],[v,b],[v,b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[v,a],[v,a],[v,b],[v,b]]]]]]).
lp2sm_test(165,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[[n,equals4],[[v,a],[1,2]]],[[n,equals4],[[v,b],[0,"|",[v,a]]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,"[]"]],[1,[on_true,2],[go_after,-],[on_false,[fail_function,0]],[go_to_predicates,-],[n,equals4],[[v,a],[1,2]]],[2,[on_true,[exit_function,0]],[go_after,-],[on_false,[fail_function,0]],[go_to_predicates,-],[n,equals4],[[v,b],[0,"|",[v,a]]]]]]]).
lp2sm_test(166,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[[n,equals4],[[v,a],0]],[[n,equals4],[[v,b],[[v,a],"|",[1,2]]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,"[]"]],[1,[on_true,2],[go_after,-],[on_false,[fail_function,0]],[go_to_predicates,-],[n,equals4],[[v,a],0]],[2,[on_true,[exit_function,0]],[go_after,-],[on_false,[fail_function,0]],[go_to_predicates,-],[n,equals4],[[v,b],[[v,a],"|",[1,2]]]]]]]).
lp2sm_test(167,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,equals4],[[[v,a],"|",[v,b]],[1,"|",2]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals4],[[[v,a],"|",[v,b]],[1,"|",2]]]]]]).
lp2sm_test(168,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,function1],[[v,a],"|",[v,b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[v,a],"|",[v,b]]]]]]).
lp2sm_test(169,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,function1],[[v,a],[v,b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[v,a],[v,b]]]]]]).
lp2sm_test(170,[[[n,query_box_1],[[v,a]],":-",[[[n,function1],[[v,a],[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[v,a],[v,a]]]]]]).
lp2sm_test(171,[[[n,query_box_1],[],":-",[[[n,function1],[[[]]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[[]]]]]]]).
lp2sm_test(172,[[[n,query_box_1],[],":-",[[[n,equals4],[[],[[]]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals4],[[],[[]]]]]]]).
lp2sm_test(173,[[[n,query_box_1],[[v,a],[v,b],[v,c],[v,d],[v,e]],":-",[[[n,equals4],[[[v,d],[v,d],[v,a],[v,b],[v,a]],[[v,e],[v,c],1,[v,c],[v,b]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d],[v,e]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals4],[[[v,d],[v,d],[v,a],[v,b],[v,a]],[[v,e],[v,c],1,[v,c],[v,b]]]]]]]).
lp2sm_test(174,[[[n,query_box_1],[[v,a],[v,c],[v,e]],":-",[[[n,function1],[[v,e],[v,c],[v,a],[v,c],[v,a]]]]]],[[0,[n,query_box_1],[[v,a],[v,c],[v,e]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[v,e],[v,c],[v,a],[v,c],[v,a]]]]]]).
lp2sm_test(175,[[[n,query_box_1],[[v,a],[v,b],[v,c],[v,d],[v,e1],[v,e2],[v,f],[v,f2]],":-",[[[n,equals4],[[[[v,e1],[v,e2]],[v,c],[v,a],[v,c],[v,a],[v,e1]],[[v,d],[v,d],[[1,1],[1,1]],[v,b],[v,b],[[v,f],[v,f2]]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d],[v,e1],[v,e2],[v,f],[v,f2]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals4],[[[[v,e1],[v,e2]],[v,c],[v,a],[v,c],[v,a],[v,e1]],[[v,d],[v,d],[[1,1],[1,1]],[v,b],[v,b],[[v,f],[v,f2]]]]]]]]).
lp2sm_test(176,[[[n,query_box_1],[[v,a],[v,c],[v,e1],[v,e2]],":-",[[[n,function1],[[[v,e1],[v,e2]],[v,c],[v,a],[v,c],[v,a],[v,e1]]]]]],[[0,[n,query_box_1],[[v,a],[v,c],[v,e1],[v,e2]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[[v,e1],[v,e2]],[v,c],[v,a],[v,c],[v,a],[v,e1]]]]]]).
lp2sm_test(177,[[[n,query_box_1],[[v,a],[v,b],[v,c],[v,d],[v,e1],[v,e2],[v,f],[v,f2]],":-",[[[n,equals4],[[[[v,e1],[v,e2]],"|",[[v,c],[v,a],[v,c],[v,a],[v,e1]]],[[v,d],"|",[[v,d],[[1,1],[1,1]],[v,b],[v,b],[[v,f],[v,f2]]]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d],[v,e1],[v,e2],[v,f],[v,f2]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals4],[[[[v,e1],[v,e2]],"|",[[v,c],[v,a],[v,c],[v,a],[v,e1]]],[[v,d],"|",[[v,d],[[1,1],[1,1]],[v,b],[v,b],[[v,f],[v,f2]]]]]]]]]).
lp2sm_test(178,[[[n,query_box_1],[[v,a],[v,c],[v,e1],[v,e2]],":-",[[[n,function1],[[[v,e1],[v,e2]],"|",[[v,c],[v,a],[v,c],[v,a],[v,e1]]]]]]],[[0,[n,query_box_1],[[v,a],[v,c],[v,e1],[v,e2]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[[v,e1],[v,e2]],"|",[[v,c],[v,a],[v,c],[v,a],[v,e1]]]]]]]).
lp2sm_test(179,[[[n,query_box_1],[],":-",[[[n,add0]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[]]]]]).
lp2sm_test(180,[[[n,query_box_1],[],":-",[[[n,add0]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[]]]]]).
lp2sm_test(181,[[[n,query_box_1],[[v,b]],":-",[[[n,1],[[1,2],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,1],[[1,2],[v,b]]]]]]).
lp2sm_test(182,[[[n,query_box_1],[[v,b]],":-",[[[n,member_try],[[1,2,3],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,member_try],[[1,2,3],[v,b]]]]]]).
lp2sm_test(183,[[[n,query_box_1],[],":-",[[[n,not1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,not1],[]]]]]).
lp2sm_test(184,[[[n,query_box_1],[],":-",[[[n,not1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,not1],[]]]]]).
lp2sm_test(185,[[[n,query_box_1],[],":-",[[[n,not1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,not1],[]]]]]).
lp2sm_test(186,[[[n,query_box_1],[],":-",[[[n,brackets1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,brackets1],[]]]]]).
lp2sm_test(187,[[[n,query_box_1],[],":-",[[[n,brackets1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,brackets1],[]]]]]).
lp2sm_test(188,[[[n,query_box_1],[],":-",[[[n,brackets1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,brackets1],[]]]]]).
lp2sm_test(189,[[[n,query_box_1],[],":-",[[[n,brackets1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,brackets1],[]]]]]).
lp2sm_test(190,[[[n,query_box_1],[],":-",[[[n,true]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,true],[]]]]]).
lp2sm_test(191,[[[n,query_box_1],[],":-",[[[n,not1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,not1],[]]]]]).
lp2sm_test(192,[[[n,query_box_1],[[v,b]],":-",[[[n,findall1],[[1,2,3],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[1,2,3],[v,b]]]]]]).
lp2sm_test(193,[[[n,query_box_1],[[v,b]],":-",[[[n,findall1],[[[[1,2,3,4]]],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[[[1,2,3,4]]],[v,b]]]]]]).
lp2sm_test(194,[[[n,query_box_1],[[v,a]],":-",[[[n,cut1],[[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,cut1],[[v,a]]]]]]).
lp2sm_test(195,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,findall],[[v,b],[[[n,or12],[[v,b]]]],[v,a]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[v,b],[v,a]]],[1,[on_true,2],[go_after,[findall_exit_function,0]],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,"[]"]],[2,[on_true,[exit_function,1]],[go_after,-],[on_false,[fail_function,1]],[go_to_predicates,-],[n,or12],[[v,b]]]]]]).
lp2sm_test(196,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,findall],[[v,b],[[[n,or12],[[v,b]]]],[v,a]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[v,b],[v,a]]],[1,[on_true,2],[go_after,[findall_exit_function,0]],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,"[]"]],[2,[on_true,[exit_function,1]],[go_after,-],[on_false,[fail_function,1]],[go_to_predicates,-],[n,or12],[[v,b]]]]]]).
lp2sm_test(197,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,findall],[[v,b],[[[n,member],[[v,b],[1]]]],[v,a]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[v,b],[v,a]]],[1,[on_true,2],[go_after,[findall_exit_function,0]],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,"[]"]],[2,[on_true,[exit_function,1]],[go_after,-],[on_false,[fail_function,1]],[go_to_predicates,-],[n,member],[[v,b],[1]]]]]]).
lp2sm_test(198,[[[n,query_box_1],[],":-",[[[n,function]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[]]]]]).
lp2sm_test(199,[[[n,query_box_1],[[v,a]],":-",[[[n,function],[1,1,[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[1,1,[v,a]]]]]]).
lp2sm_test(200,[[[n,query_box_1],[],":-",[[[n,function]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[]]]]]).
lp2sm_test(201,[[[n,query_box_1],[],":-",[[[n,function]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[]]]]]).
lp2sm_test(202,[[[n,query_box_1],[],":-",[[[n,function]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[]]]]]).
lp2sm_test(203,[[[n,query_box_1],[],":-",[[[n,traverse],[2,6]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,traverse],[2,6]]]]]).
lp2sm_test(204,[[[n,query_box_1],[],":-",[[[n,function]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[]]]]]).
lp2sm_test(205,[[[n,query_box_1],[[v,b]],":-",[[[n,findall1],[[[1,2],[1,4]],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[[1,2],[1,4]],[v,b]]]]]]).
lp2sm_test(206,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,findall],[[v,b],[[[n,or12],[1,[v,b]]]],[v,a]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[v,b],[v,a]]],[1,[on_true,2],[go_after,[findall_exit_function,0]],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,"[]"]],[2,[on_true,[exit_function,1]],[go_after,-],[on_false,[fail_function,1]],[go_to_predicates,-],[n,or12],[1,[v,b]]]]]]).
lp2sm_test(207,[[[n,query_box_1],[[v,b1]],":-",[[[n,findall1],[[1,2],[v,b1]]]]]],[[0,[n,query_box_1],[[v,b1]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[1,2],[v,b1]]]]]]).
lp2sm_test(208,[[[n,query_box_1],[[v,b],[v,c],[v,g]],":-",[[[n,reverse1],[[1,2,3],[],[v,c],[v,b],[v,g]]]]]],[[0,[n,query_box_1],[[v,b],[v,c],[v,g]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,reverse1],[[1,2,3],[],[v,c],[v,b],[v,g]]]]]]).
lp2sm_test(209,[[[n,query_box_1],[[v,a]],":-",[[[n,a],[["a","b"],"",[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,a],[["a","b"],"",[v,a]]]]]]).
lp2sm_test(210,[[[n,query_box_1],[],":-",[[[n,grammar1],[[apple]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],[[apple]]]]]]).
lp2sm_test(211,[[[n,query_box_1],[],":-",[[[n,grammar1],[[apple,banana]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],[[apple,banana]]]]]]).
lp2sm_test(212,[[[n,query_box_1],[],":-",[[[n,grammar1],[[apple,banana,carrot]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],[[apple,banana,carrot]]]]]]).
lp2sm_test(213,[[[n,query_box_1],[[v,a]],":-",[[[n,reverse1],[[1,2,3],[],[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,reverse1],[[1,2,3],[],[v,a]]]]]]).
lp2sm_test(214,[[[n,query_box_1],[[v,a]],":-",[[[n,append1],[[1,2,3],[],[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append1],[[1,2,3],[],[v,a]]]]]]).
lp2sm_test(215,[[[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[[n,findall],[[[v,a],[v,b]],[[n,append],[[v,a],[v,b],[1,2,3]]],[v,c]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[[v,a],[v,b]],[v,c]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,append],[[v,a],[v,b],[1,2,3]]]]]]).
lp2sm_test(216,[[[n,query_box_1],[],":-",[[[n,traverse],[2,8]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,traverse],[2,8]]]]]).
lp2sm_test(217,[[[n,query_box_1],[],":-",[[[n,traverse],[2,6]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,traverse],[2,6]]]]]).
lp2sm_test(218,[[[n,query_box_1],[[v,b]],":-",[[[n,findall1],[[[1,2],[3,4]],[v,b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[[1,2],[3,4]],[v,b]]]]]]).
lp2sm_test(219,[[[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[[n,findall],[[[v,a],[v,b]],[[n,stringconcat],[[v,a],[v,b],"abc"]],[v,c]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[[v,a],[v,b]],[v,c]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,stringconcat],[[v,a],[v,b],"abc"]]]]]).
lp2sm_test(220,[[[n,query_box_1],[],":-",[[[n,stringconcat],["a","b","ab"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,stringconcat],["a","b","ab"]]]]]).
lp2sm_test(221,[[[n,query_box_1],[[v,a]],":-",[[[n,stringconcat],["a","b",[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,stringconcat],["a","b",[v,a]]]]]]).
lp2sm_test(222,[[[n,query_box_1],[[v,a]],":-",[[[n,stringconcat],["a",[v,a],"ab"]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,stringconcat],["a",[v,a],"ab"]]]]]).
lp2sm_test(223,[[[n,query_box_1],[[v,a]],":-",[[[n,stringconcat],[[v,a],"b","ab"]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,stringconcat],[[v,a],"b","ab"]]]]]).
lp2sm_test(224,[[[n,query_box_1],[],":-",[[[n,append],[["a"],["b"],["a","b"]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append],[["a"],["b"],["a","b"]]]]]]).
lp2sm_test(225,[[[n,query_box_1],[[v,a]],":-",[[[n,append],[["a"],["b"],[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append],[["a"],["b"],[v,a]]]]]]).
lp2sm_test(226,[[[n,query_box_1],[[v,a]],":-",[[[n,append],[["a"],[v,a],["a","b"]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append],[["a"],[v,a],["a","b"]]]]]]).
lp2sm_test(227,[[[n,query_box_1],[[v,a]],":-",[[[n,append],[[v,a],["b"],["a","b"]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append],[[v,a],["b"],["a","b"]]]]]]).
lp2sm_test(228,[[[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[[n,findall],[[[v,a],[v,b]],[[n,append],[[v,a],[v,b],["a","b","c"]]],[v,c]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[[v,a],[v,b]],[v,c]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,append],[[v,a],[v,b],["a","b","c"]]]]]]).
lp2sm_test(229,[[[n,query_box_1],[[v,a],[v,c]],":-",[[[n,findall],[[v,a],[[n,member],[[v,a],["a","b"]]],[v,c]]]]]],[[0,[n,query_box_1],[[v,a],[v,c]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[v,a],[v,c]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,member],[[v,a],["a","b"]]]]]]).
lp2sm_test(230,[[[n,query_box_1],[[v,a],[v,b]],":-",[[[n,append],[["a"],[v,a],[v,b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append],[["a"],[v,a],[v,b]]]]]]).
lp2sm_test(231,[[[n,query_box_1],[[v,a],[v,c],[v,d]],":-",[[[n,findall],[[[v,a],[v,c]],[[n,append],[[v,a],["a","b"],[v,c]]],[v,d]]]]]],[[0,[n,query_box_1],[[v,a],[v,c],[v,d]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[[v,a],[v,c]],[v,d]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,append],[[v,a],["a","b"],[v,c]]]]]]).
lp2sm_test(232,[[[n,query_box_1],[],":-",[[[n,member],["a",["a","b"]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,member],["a",["a","b"]]]]]]).
lp2sm_test(233,[[[n,query_box_1],[[v,a],[v,d]],":-",[[[n,findall],[[v,a],[[n,member],["a",[v,a]]],[v,d]]]]]],[[0,[n,query_box_1],[[v,a],[v,d]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[v,a],[v,d]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,member],["a",[v,a]]]]]]).
lp2sm_test(234,[[[n,query_box_1],[[v,a]],":-",[[[n,member],[[v,a],["a","b"]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,member],[[v,a],["a","b"]]]]]]).
lp2sm_test(235,[[[n,query_box_1],[[v,a],[v,b],[v,d]],":-",[[[n,findall],[[[v,a],[v,b]],[[n,member],[[v,b],[v,a]]],[v,d]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,d]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[[v,a],[v,b]],[v,d]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,member],[[v,b],[v,a]]]]]]).
lp2sm_test(236,[[[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[[n,findall],[[[v,a],[v,b],[v,c]],[[n,append],[[v,a],["a"],[[v,b],"|",[v,c]]]],[v,d]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[[v,a],[v,b],[v,c]],[v,d]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,append],[[v,a],["a"],[[v,b],"|",[v,c]]]]]]]).
lp2sm_test(237,[[[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[[n,findall],[[[v,a],[v,b],[v,c]],[[n,append],[[v,a],["b",[v,b]],[v,c]]],[v,d]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[[v,a],[v,b],[v,c]],[v,d]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,append],[[v,a],["b",[v,b]],[v,c]]]]]]).
lp2sm_test(238,[[[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[[n,findall],[[[v,a],[v,b],[v,c]],[[n,append],[[v,a],[v,b],[v,c]]],[v,d]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[[v,a],[v,b],[v,c]],[v,d]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,append],[[v,a],[v,b],[v,c]]]]]]).
lp2sm_test(239,[[[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[[n,append],[[v,a],["b",[v,b]],[[v,c]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append],[[v,a],["b",[v,b]],[[v,c]]]]]]]).
lp2sm_test(240,[[[n,query_box_1],[[v,a],[v,c]],":-",[[[n,append],[[v,a],["b"],[[v,c]]]]]]],[[0,[n,query_box_1],[[v,a],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append],[[v,a],["b"],[[v,c]]]]]]]).
lp2sm_test(241,[[[n,query_box_1],[[v,a]],":-",[[[n,reverse1],[[v,a],[],[3,2,1]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,reverse1],[[v,a],[],[3,2,1]]]]]]).
lp2sm_test(242,[[[n,query_box_1],[[v,a]],":-",[[[n,append1],[[v,a],[],[1,2,3]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append1],[[v,a],[],[1,2,3]]]]]]).
lp2sm_test(243,[[[n,query_box_1],[[v,a]],":-",[[[n,back_propagate],[[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,back_propagate],[[v,a]]]]]]).
lp2sm_test(244,[[[n,query_box_1],[[v,d]],":-",[[[n,foldl1],[[n,stringconcata1],["a","b"],"",[v,d]]]]]],[[0,[n,query_box_1],[[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,foldl1],[[n,stringconcata1],["a","b"],"",[v,d]]]]]]).
lp2sm_test(245,[[[n,query_box_1],[[v,a],[v,x],[v,y],[v,z]],":-",[[[[n,equals4],[[v,a],"abc"]],[[n,string_chars],[[v,a],[[v,x],[v,y],[v,z]]]]]]]],[[0,[n,query_box_1],[[v,a],[v,x],[v,y],[v,z]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,"[]"]],[1,[on_true,2],[go_after,-],[on_false,[fail_function,0]],[go_to_predicates,-],[n,equals4],[[v,a],"abc"]],[2,[on_true,[exit_function,0]],[go_after,-],[on_false,[fail_function,0]],[go_to_predicates,-],[n,string_chars],[[v,a],[[v,x],[v,y],[v,z]]]]]]]).
lp2sm_test(246,[[[n,query_box_1],[],":-",[[[n,test2]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,test2],[]]]]]).
lp2sm_test(247,[[[n,query_box_1],[[v,a]],":-",[[[n,test2],[[v,a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,test2],[[v,a]]]]]]).


bt-lp2sm_test(BL,RL) :-
findall(A,(lp2sm_test(N,I,O),((sm_to_lp(O,I2),I2=I)->(writeln([bt-lp2sm_test,N,passed]),A=passed);(writeln([bt-lp2sm_test,N,failed]),A=failed))),B),
length(B,BL),
findall(_,member(passed,B),R),length(R,RL),!.

bt-lp2sm_test1(N,A) :-
lp2sm_test(N,I,O),((sm_to_lp(O,I2),I=I2)->(writeln([bt-lp2sm_test,N,passed]),A=passed);(writeln([bt-lp2sm_test,N,failed]),A=failed)),!.


%?- test(1,Q,F,R),query_box(Q,Query1,Functions,Functions1),convert_to_grammar_part1(Functions1,[],Functions2,_),add_line_numbers_to_algorithm1(Functions2,Functions2a),find_pred_numbers(Functions2a,[]                                          ,Pred_numbers),retractall(pred_numbers(_)),assertz(pred_numbers(Pred_numbers)),find_state_machine1(Functions2a,Functions3,Pred_numbers),writeln(Functions2),sm_to_lp(Functions3,Functions4),writeln(Functions4).


% to do
% back-translation, on I not O


bt1-lp2sm_test(BL,RL) :-
findall(A,(lp2sm_test(N,I,O),(((once((add_line_numbers_to_algorithm1(I,Functions2a),find_pred_numbers(Functions2a,[]                                          ,Pred_numbers),retractall(pred_numbers(_)),assertz(pred_numbers(Pred_numbers)),find_state_machine1(Functions2a,O1,Pred_numbers))),O=O1)->(writeln([bt1-lp2sm_test,N,passed]),A=passed);(writeln([bt1-lp2sm_test,N,failed]),A=failed)))),B),
length(B,BL),
findall(_,member(passed,B),R),length(R,RL),!.

bt1-lp2sm_test1(N,A) :-
lp2sm_test(N,I,O),(((once((add_line_numbers_to_algorithm1(I,Functions2a),find_pred_numbers(Functions2a,[]                                          ,Pred_numbers),retractall(pred_numbers(_)),assertz(pred_numbers(Pred_numbers)),find_state_machine1(Functions2a,O1,Pred_numbers))),O=O1)->(writeln([bt1-lp2sm_test,N,passed]),A=passed);(writeln([bt1-lp2sm_test,N,failed]),A=failed))),!.
