:-include('../SSI/ssi.pl').
:-include('../State-Machine-to-List-Prolog/sm_to_lp.pl').

% back-translates List Prolog to State Machines

% bt-lp2sm_en2test(A,B).
% A - output: total tests
% B - output: total correct results

% bt-lp2sm_en2test1(N,B).
% N - input: number to test
% B - output: result


%?- retractall(lang(_)),assertz(lang("en")),Lang="en2",numbers(247,1,[],N),findall(["lp2sm_en2test(",N1,",",Functions2b,",",Functions3b,").\n"],(member(N1,N),(once((test(N1,Q,F,R),query_box(Q,Query1,Functions,Functions1),convert_to_grammar_part1(Functions1,[],Functions2,_),trans_alg(Functions2,"en",Lang,F2),retractall(lang(_)),assertz(lang("en")),add_line_numbers_to_algorithm1(Functions2,Functions2a),find_pred_numbers(Functions2a,[],Pred_numbers),retractall(pred_numbers(_)),assertz(pred_numbers(Pred_numbers)),find_state_machine1(Functions2a,Functions3,Pred_numbers),sm_to_lp(Functions3,Functions4),term_to_atom(F2,Functions2b),term_to_atom(Functions3,Functions3b))))),A),foldr(append,A,B1),foldr(string_concat,B1,B),writeln(B).


lp2sm_en2test(1,[[["n","query box 1"],[],":-",[[["n","function"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[]]]]]).
lp2sm_en2test(2,[[["n","query box 1"],[["v",c]],":-",[[["n","function"],[1,1,["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[1,1,[v,c]]]]]]).
lp2sm_en2test(3,[[["n","query box 1"],[["v",c]],":-",[[["n","function"],[1,1,["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[1,1,[v,c]]]]]]).
lp2sm_en2test(4,[[["n","query box 1"],[["v",a]],":-",[[["n","append 1"],[["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append1],[[v,a]]]]]]).
lp2sm_en2test(5,[[["n","query box 1"],[["v",n]],":-",[[["n","count"],[1,["v",n]]]]]],[[0,[n,query_box_1],[[v,n]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,count],[1,[v,n]]]]]]).
lp2sm_en2test(6,[[["n","query box 1"],[["v",n]],":-",[[["n","count"],[0,["v",n]]]]]],[[0,[n,query_box_1],[[v,n]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,count],[0,[v,n]]]]]]).
lp2sm_en2test(7,[[["n","query box 1"],[["v",l]],":-",[[["n","reverse"],[[1,2,3],[],["v",l]]]]]],[[0,[n,query_box_1],[[v,l]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,reverse],[[1,2,3],[],[v,l]]]]]]).
lp2sm_en2test(8,[[["n","query box 1"],[],":-",[[["n","grammar 1"],["apple"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["apple"]]]]]).
lp2sm_en2test(9,[[["n","query box 1"],[],":-",[[["n","grammar 1"],["aaa"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["aaa"]]]]]).
lp2sm_en2test(10,[[["n","query box 1"],[["v",t]],":-",[[["n","grammar 1"],["aa",["v",t]]]]]],[[0,[n,query_box_1],[[v,t]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["aa",[v,t]]]]]]).
lp2sm_en2test(11,[[["n","query box 1"],[["v",t],["v",u]],":-",[[["n","grammar 1"],["aa",["v",t],["v",u]]]]]],[[0,[n,query_box_1],[[v,t],[v,u]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["aa",[v,t],[v,u]]]]]]).
lp2sm_en2test(12,[[["n","query box 1"],[],":-",[[["n","grammar 1"],["aa"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["aa"]]]]]).
lp2sm_en2test(13,[[["n","query box 1"],[["v",t]],":-",[[["n","grammar 1"],["[a,a]",["v",t]]]]]],[[0,[n,query_box_1],[[v,t]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["[a,a]",[v,t]]]]]]).
lp2sm_en2test(14,[[["n","query box 1"],[["v",t]],":-",[[["n","grammar 1"],["[a]",["v",t]]]]]],[[0,[n,query_box_1],[[v,t]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["[a]",[v,t]]]]]]).
lp2sm_en2test(15,[[["n","query box 1"],[["v",t]],":-",[[["n","grammar 1"],["[[""aa,]"",b,""c"",[]],1]",["v",t]]]]]],[[0,[n,query_box_1],[[v,t]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["[[""aa,]"",b,""c"",[]],1]",[v,t]]]]]]).
lp2sm_en2test(16,[[["n","query box 1"],[],":-",[[["n","grammar 1"],["john ate the apple"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["john ate the apple"]]]]]).
lp2sm_en2test(17,[[["n","query box 1"],[["v",t]],":-",[[["n","grammar 1"],["aaa1 ,-'! a? b! b.",["v",t]]]]]],[[0,[n,query_box_1],[[v,t]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["aaa1 ,-'! a? b! b.",[v,t]]]]]]).
lp2sm_en2test(18,[[["n","query box 1"],[["v",c]],":-",[[["n","grammar 1"],["what is 1+11",["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["what is 1+11",[v,c]]]]]]).
lp2sm_en2test(19,[[["n","query box 1"],[["v",s]],":-",[[["n","positivityscore"],[["not","you","like","a","walk"],["would","you","like","a","walk"],0,["v",s]]]]]],[[0,[n,query_box_1],[[v,s]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,positivityscore],[["not","you","like","a","walk"],["would","you","like","a","walk"],0,[v,s]]]]]]).
lp2sm_en2test(20,[[["n","query box 1"],[["v",c]],":-",[[["n","function"],[1,1,["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[1,1,[v,c]]]]]]).
lp2sm_en2test(21,[[["n","query box 1"],[["v",t]],":-",[[["n","grammar 1"],["ate",["v",t]]]]]],[[0,[n,query_box_1],[[v,t]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["ate",[v,t]]]]]]).
lp2sm_en2test(22,[[["n","query box 1"],[],":-",[[["n","grammar 1"],["peter cut the pear"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["peter cut the pear"]]]]]).
lp2sm_en2test(23,[[["n","query box 1"],[["v",s]],":-",[[["n","agree"],[["a","b","c"],["d","e","f"],["a","b","c","g"],["v",s]]]]]],[[0,[n,query_box_1],[[v,s]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,agree],[["a","b","c"],["d","e","f"],["a","b","c","g"],[v,s]]]]]]).
lp2sm_en2test(24,[[["n","query box 1"],[["v",s]],":-",[[["n","modus ponens"],["a",[["a","b"],["c","d"],["e","f"]],["v",s]]]]]],[[0,[n,query_box_1],[[v,s]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,modus_ponens],["a",[["a","b"],["c","d"],["e","f"]],[v,s]]]]]]).
lp2sm_en2test(25,[[["n","query box 1"],[["v",s]],":-",[[["n","grammar 1"],["aaa1 ,-'
a
b
b
","aaa1 ,-'
a
b
a",["v",s]]]]]],[[0,[n,query_box_1],[[v,s]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["aaa1 ,-'
a
b
b
","aaa1 ,-'
a
b
a",[v,s]]]]]]).
lp2sm_en2test(26,[[["n","query box 1"],[["v",s]],":-",[[["n","append 1"],[["a"],["b"],["v",s]]]]]],[[0,[n,query_box_1],[[v,s]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append1],[["a"],["b"],[v,s]]]]]]).
lp2sm_en2test(27,[[["n","query box 1"],[],":-",[[["n","equals 11"],["a","a"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals11],["a","a"]]]]]).
lp2sm_en2test(28,[[["n","query box 1"],[],":-",[[["n","number 11"],[1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,number11],[1]]]]]).
lp2sm_en2test(29,[[["n","query box 1"],[["v",c]],":-",[[["n","minus 11"],[[1,2,3],[3],["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,minus11],[[1,2,3],[3],[v,c]]]]]]).
lp2sm_en2test(30,[[["n","query box 1"],[["v",b]],":-",[[["n","if 11"],[1,["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,if11],[1,[v,b]]]]]]).
lp2sm_en2test(31,[[["n","query box 1"],[],":-",[[["n","not 11"],[1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,not11],[1]]]]]).
lp2sm_en2test(32,[[["n","query box 1"],[],":-",[[["n","or 11"],[1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,or11],[1]]]]]).
lp2sm_en2test(33,[[["n","query box 1"],[],":-",[[["n","downpipe"],[3,1,[[3,[4,2]],[2,[3,1]]]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,downpipe],[3,1,[[3,[4,2]],[2,[3,1]]]]]]]]).
lp2sm_en2test(34,[[["n","query box 1"],[["v",c]],":-",[[["n","getitemn"],[3,[1,2,3],["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,getitemn],[3,[1,2,3],[v,c]]]]]]).
lp2sm_en2test(35,[[["n","query box 1"],[],":-",[[["n","identical"],[1,2]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,identical],[1,2]]]]]).
lp2sm_en2test(36,[[["n","query box 1"],[],":-",[[["n","associative"],[1,2,3]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,associative],[1,2,3]]]]]).
lp2sm_en2test(37,[[["n","query box 1"],[["v",l]],":-",[[["n","length 1"],[[1],0,["v",l]]]]]],[[0,[n,query_box_1],[[v,l]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,length1],[[1],0,[v,l]]]]]]).
lp2sm_en2test(38,[[["n","query box 1"],[["v",d]],":-",[[["n","optimise 1"],[[[5,4],[3,2],[1,0]],["v",d]]]]]],[[0,[n,query_box_1],[[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,optimise1],[[[5,4],[3,2],[1,0]],[v,d]]]]]]).
lp2sm_en2test(39,[[["n","query box 1"],[],":-",[[["n","member 1a"],[1,[1,2]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,member1a],[1,[1,2]]]]]]).
lp2sm_en2test(40,[[["n","query box 1"],[["v",a]],":-",[[["n","minus 1"],[[1,2,3],[1,2],["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,minus1],[[1,2,3],[1,2],[v,a]]]]]]).
lp2sm_en2test(41,[[["n","query box 1"],[],":-",[[["n","part of string"],[[1,2,3,4],[2,3]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,part_of_string],[[1,2,3,4],[2,3]]]]]]).
lp2sm_en2test(42,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","find all"],[["v",b],[[["n","or 12"],[["v",b]]]],["v",a]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[v,b],[v,a]]],[1,[on_true,2],[go_after,[findall_exit_function,0]],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,"[]"]],[2,[on_true,[exit_function,1]],[go_after,-],[on_false,[fail_function,1]],[go_to_predicates,-],[n,or12],[[v,b]]]]]]).
lp2sm_en2test(43,[[["n","query box 1"],[["v",a]],":-",[[["n","intersection 1"],[[1,2,3],[3,4,5],[],["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,intersection1],[[1,2,3],[3,4,5],[],[v,a]]]]]]).
lp2sm_en2test(44,[[["n","query box 1"],[["v",a]],":-",[[["n","delete 2"],[[1,1,2],1,[],["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,delete2],[[1,1,2],1,[],[v,a]]]]]]).
lp2sm_en2test(45,[[["n","query box 1"],[],":-",[[["n","greaterthan"],[3,2]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,greaterthan],[3,2]]]]]).
lp2sm_en2test(46,[[["n","query box 1"],[["v",c]],":-",[[["n","conjunction"],["true","false",["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,conjunction],["true","false",[v,c]]]]]]).
lp2sm_en2test(47,[[["n","query box 1"],[["v",l]],":-",[[["n","sum"],[[3,1,2],0,["v",l]]]]]],[[0,[n,query_box_1],[[v,l]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,sum],[[3,1,2],0,[v,l]]]]]]).
lp2sm_en2test(48,[[["n","query box 1"],[["v",l]],":-",[[["n","sort 0"],[[9,4,8,2,1,5,7,6,3,10],["v",l]]]]]],[[0,[n,query_box_1],[[v,l]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,sort0],[[9,4,8,2,1,5,7,6,3,10],[v,l]]]]]]).
lp2sm_en2test(49,[[["n","query box 1"],[["v",m]],":-",[[["n","maximum 0"],[[2,1,3,5,-1],["v",m]]]]]],[[0,[n,query_box_1],[[v,m]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,maximum0],[[2,1,3,5,-1],[v,m]]]]]]).
lp2sm_en2test(50,[[["n","query box 1"],[["v",c]],":-",[[["n","disjunction"],["true","false",["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,disjunction],["true","false",[v,c]]]]]]).
lp2sm_en2test(51,[[["n","query box 1"],[["v",c]],":-",[[["n","expressionnotheadache"],["true",["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,expressionnotheadache],["true",[v,c]]]]]]).
lp2sm_en2test(52,[[["n","query box 1"],[["v",c]],":-",[[["n","mainrole"],[7,["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,mainrole],[7,[v,c]]]]]]).
lp2sm_en2test(53,[[["n","query box 1"],[["v",c]],":-",[[["n","function"],[[["n","function 2"],[2]],1,1,["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[[[n,function2],[2]],1,1,[v,c]]]]]]).
lp2sm_en2test(54,[[["n","query box 1"],[["v",c]],":-",[[["n","function"],[[["n","function 2"],[2]],1,1,["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[[[n,function2],[2]],1,1,[v,c]]]]]]).
lp2sm_en2test(55,[[["n","query box 1"],[["v",c]],":-",[[["n","test 1"],[["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,test1],[[v,c]]]]]]).
lp2sm_en2test(56,[[["n","query box 1"],[["v",d]],":-",[[["n","map"],[["n","add"],[1,2,3],0,["v",d]]]]]],[[0,[n,query_box_1],[[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,map],[[n,add],[1,2,3],0,[v,d]]]]]]).
lp2sm_en2test(57,[[["n","query box 1"],[["v",d]],":-",[[["n","find all 1"],[["n","plusone"],[1,2,3],[],["v",d]]]]]],[[0,[n,query_box_1],[[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[n,plusone],[1,2,3],[],[v,d]]]]]]).
lp2sm_en2test(58,[[["n","query box 1"],[["v",d]],":-",[[["n","find all 1"],[["n","a to c"],["a","b","a"],[],["v",d]]]]]],[[0,[n,query_box_1],[[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[n,a_to_c],["a","b","a"],[],[v,d]]]]]]).
lp2sm_en2test(59,[[["n","query box 1"],[["v",n]],":-",[[["n","count"],[1,["v",n]]]]]],[[0,[n,query_box_1],[[v,n]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,count],[1,[v,n]]]]]]).
lp2sm_en2test(60,[[["n","query box 1"],[],":-",[[["n","a"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,a],[]]]]]).
lp2sm_en2test(61,[[["n","query box 1"],[["v",l]],":-",[[["n","add"],[[1,2,3],3,[],["v",l]]]]]],[[0,[n,query_box_1],[[v,l]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add],[[1,2,3],3,[],[v,l]]]]]]).
lp2sm_en2test(62,[[["n","query box 1"],[["v",l]],":-",[[["n","add"],[[1],[2,3],["v",l]]]]]],[[0,[n,query_box_1],[[v,l]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add],[[1],[2,3],[v,l]]]]]]).
lp2sm_en2test(63,[[["n","query box 1"],[["v",b]],":-",[[["n","add"],[1,["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add],[1,[v,b]]]]]]).
lp2sm_en2test(64,[[["n","query box 1"],[["v",b]],":-",[[["n","add 0"],[[1,2],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[[1,2],[v,b]]]]]]).
lp2sm_en2test(65,[[["n","query box 1"],[["v",b]],":-",[[["n","add 0"],[[1],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[[1],[v,b]]]]]]).
lp2sm_en2test(66,[[["n","query box 1"],[],":-",[[["n","addorsubtract 1"],[2,1,1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,addorsubtract1],[2,1,1]]]]]).
lp2sm_en2test(67,[[["n","query box 1"],[],":-",[[["n","addorsubtract 1"],[2,1,1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,addorsubtract1],[2,1,1]]]]]).
lp2sm_en2test(68,[[["n","query box 1"],[],":-",[[["n","addorsubtract 1"],[2,1,1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,addorsubtract1],[2,1,1]]]]]).
lp2sm_en2test(69,[[["n","query box 1"],[],":-",[[["n","add 0"],[2,1]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[2,1]]]]]).
lp2sm_en2test(70,[[["n","query box 1"],[],":-",[[["n","add 0"],[1,2]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[1,2]]]]]).
lp2sm_en2test(71,[[["n","query box 1"],[],":-",[[["n","add 0"],[1,2]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[1,2]]]]]).
lp2sm_en2test(72,[[["n","query box 1"],[["v",b]],":-",[[["n","add 0"],[1,["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[1,[v,b]]]]]]).
lp2sm_en2test(73,[[["n","query box 1"],[["v",c]],":-",[[["n","add 0"],[1,1,["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[1,1,[v,c]]]]]]).
lp2sm_en2test(74,[[["n","query box 1"],[["v",c]],":-",[[["n","add 0"],[[1,2],["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[[1,2],[v,c]]]]]]).
lp2sm_en2test(75,[[["n","query box 1"],[["v",c]],":-",[[["n","add 0"],[[],["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[[],[v,c]]]]]]).
lp2sm_en2test(76,[[["n","query box 1"],[["v",b]],":-",[[["n","implies 2"],[1,["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,implies2],[1,[v,b]]]]]]).
lp2sm_en2test(77,[[["n","query box 1"],[["v",b]],":-",[[["n","find all 1"],[[1,2,3],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[1,2,3],[v,b]]]]]]).
lp2sm_en2test(78,[[["n","query box 1"],[["v",b]],":-",[[["n","map list 1"],[[1,2,3],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,maplist1],[[1,2,3],[v,b]]]]]]).
lp2sm_en2test(79,[[["n","query box 1"],[["v",b]],":-",[[["n","equals 41"],[[1,2,3],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[1,2,3],[v,b]]]]]]).
lp2sm_en2test(80,[[["n","query box 1"],[["v",a],["v",b],["v",c],["v",d]],":-",[[["n","equals 41"],[["v",a],["v",d],["v",c],["v",b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,d],[v,c],[v,b]]]]]]).
lp2sm_en2test(81,[[["n","query box 1"],[["v",a],["v",b],["v",c]],":-",[[["n","equals 41"],[["v",a],["v",c],["v",b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,c],[v,b]]]]]]).
lp2sm_en2test(82,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","equals 41"],[["v",a],["v",b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,b]]]]]]).
lp2sm_en2test(83,[[["n","query box 1"],[],":-",[[["n","equals 41"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[]]]]]).
lp2sm_en2test(84,[[["n","query box 1"],[["v",a],["v",b],["v",c]],":-",[[["n","equals 41"],[["v",a],["v",c],["v",b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,c],[v,b]]]]]]).
lp2sm_en2test(85,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","equals 41"],[["v",a],["v",b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,b]]]]]]).
lp2sm_en2test(86,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","equals 41"],[["v",a],["v",b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,b]]]]]]).
lp2sm_en2test(87,[[["n","query box 1"],[["v",a]],":-",[[["n","equals 41"],[["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a]]]]]]).
lp2sm_en2test(88,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","equals 41"],[["v",a],["v",b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,b]]]]]]).
lp2sm_en2test(89,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","equals 41"],[["v",a],["v",b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,b]]]]]]).
lp2sm_en2test(90,[[["n","query box 1"],[],":-",[[["n","equals 41"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[]]]]]).
lp2sm_en2test(91,[[["n","query box 1"],[],":-",[[["n","equals 41"],[[1,2,3]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[1,2,3]]]]]]).
lp2sm_en2test(92,[[["n","query box 1"],[["v",a],["v",b],["v",d]],":-",[[["n","equals 41"],[["v",a],["v",b],["v",d]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,b],[v,d]]]]]]).
lp2sm_en2test(93,[[["n","query box 1"],[["v",b]],":-",[[["n","map list 1"],[[[1],[2],[3]],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,maplist1],[[[1],[2],[3]],[v,b]]]]]]).
lp2sm_en2test(94,[[["n","query box 1"],[["v",b]],":-",[[["n","map list 1"],[[[[1]],[[2]],[[3]]],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,maplist1],[[[[1]],[[2]],[[3]]],[v,b]]]]]]).
lp2sm_en2test(95,[[["n","query box 1"],[["v",b]],":-",[[["n","find all 1"],[[1,2,3],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[1,2,3],[v,b]]]]]]).
lp2sm_en2test(96,[[["n","query box 1"],[["v",b]],":-",[[["n","equals 41"],[1,["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[1,[v,b]]]]]]).
lp2sm_en2test(97,[[["n","query box 1"],[["v",a]],":-",[[["n","equals 41"],[["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a]]]]]]).
lp2sm_en2test(98,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","equals 41"],[[[1,2],3,4],["v",a],["v",b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[1,2],3,4],[v,a],[v,b]]]]]]).
lp2sm_en2test(99,[[["n","query box 1"],[["v",b]],":-",[[["n","equals 41"],[1,["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[1,[v,b]]]]]]).
lp2sm_en2test(100,[[["n","query box 1"],[["v",b],["v",c]],":-",[[["n","equals 41"],[1,["v",c],["v",b]]]]]],[[0,[n,query_box_1],[[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[1,[v,c],[v,b]]]]]]).
lp2sm_en2test(101,[[["n","query box 1"],[["v",b],["v",c]],":-",[[["n","equals 41"],[1,["v",c],["v",b]]]]]],[[0,[n,query_box_1],[[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[1,[v,c],[v,b]]]]]]).
lp2sm_en2test(102,[[["n","query box 1"],[["v",b1],["v",b2],["v",b3]],":-",[[["n","equals 41"],[1,[2,3],["v",b1],["v",b2],["v",b3]]]]]],[[0,[n,query_box_1],[[v,b1],[v,b2],[v,b3]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[1,[2,3],[v,b1],[v,b2],[v,b3]]]]]]).
lp2sm_en2test(103,[[["n","query box 1"],[["v",b1],["v",b2],["v",b3]],":-",[[["n","equals 41"],[1,[2,3],["v",b1],["v",b2],["v",b3]]]]]],[[0,[n,query_box_1],[[v,b1],[v,b2],[v,b3]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[1,[2,3],[v,b1],[v,b2],[v,b3]]]]]]).
lp2sm_en2test(104,[[["n","query box 1"],[["v",b]],":-",[[["n","find all 1"],[[[1,2],[3,4]],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[[1,2],[3,4]],[v,b]]]]]]).
lp2sm_en2test(105,[[["n","query box 1"],[["v",b]],":-",[[["n","member 2a"],[["v",b],[1,11,111]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,member2a],[[v,b],[1,11,111]]]]]]).
lp2sm_en2test(106,[[["n","query box 1"],[["v",b]],":-",[[["n","call 1a"],[["v",b],[1,11,111]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,call1a],[[v,b],[1,11,111]]]]]]).
lp2sm_en2test(107,[[["n","query box 1"],[["v",b]],":-",[[["n","call 1b"],[[1,11,111],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,call1b],[[1,11,111],[v,b]]]]]]).
lp2sm_en2test(108,[[["n","query box 1"],[["v",b]],":-",[[["n","call 1b"],[[1,11,111],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,call1b],[[1,11,111],[v,b]]]]]]).
lp2sm_en2test(109,[[["n","query box 1"],[["v",b]],":-",[[["n","middle"],[2,["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,middle],[2,[v,b]]]]]]).
lp2sm_en2test(110,[[["n","query box 1"],[["v",b]],":-",[[["n","level with"],[170,["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,level_with],[170,[v,b]]]]]]).
lp2sm_en2test(111,[[["n","query box 1"],[["v",a]],":-",[[["n","tra las"],[5,["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,tra_las],[5,[v,a]]]]]]).
lp2sm_en2test(112,[[["n","query box 1"],[["v",a]],":-",[[["n","final gong"],[5,["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,final_gong],[5,[v,a]]]]]]).
lp2sm_en2test(113,[[["n","query box 1"],[["v",b]],":-",[[["n","bedroom to garden"],["bedroom",["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,bedroom_to_garden],["bedroom",[v,b]]]]]]).
lp2sm_en2test(114,[[["n","query box 1"],[["v",a]],":-",[[["n","stop at top"],[["-","-","-","top"],["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,stop_at_top],[["-","-","-","top"],[v,a]]]]]]).
lp2sm_en2test(115,[[["n","query box 1"],[["v",result]],":-",[[["n","function"],[[["n1","a"]],[["a",5]],[],["v",result]]]]]],[[0,[n,query_box_1],[[v,result]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[[["n1","a"]],[["a",5]],[],[v,result]]]]]]).
lp2sm_en2test(116,[[["n","query box 1"],[["v",t]],":-",[[["n","grammar 1"],[".aaa.bbb.",[".","?"],["v",t]]]]]],[[0,[n,query_box_1],[[v,t]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],[".aaa.bbb.",[".","?"],[v,t]]]]]]).
lp2sm_en2test(117,[[["n","query box 1"],[["v",t]],":-",[[["n","grammar 1"],["a   a. a ",[" ","."],["v",t]]]]]],[[0,[n,query_box_1],[[v,t]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],["a   a. a ",[" ","."],[v,t]]]]]]).
lp2sm_en2test(118,[[["n","query box 1"],[],":-",[[["n","query pred"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,query_pred],[]]]]]).
lp2sm_en2test(119,[[["n","query box 1"],[],":-",[[["n","count"],[2]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,count],[2]]]]]).
lp2sm_en2test(120,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","function"],[1,["v",b],2,["v",a]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[1,[v,b],2,[v,a]]]]]]).
lp2sm_en2test(121,[[["n","query box 1"],[["v",a]],":-",[[["n","append 1"],[["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append1],[[v,a]]]]]]).
lp2sm_en2test(122,[[["n","query box 1"],[],":-",[[["n","equals 4 on1"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals4_on1],[]]]]]).
lp2sm_en2test(123,[[["n","query box 1"],[["v",b],["v",c]],":-",[[["n","equals 41"],[[["v",b],"|",["v",c]]]]]]],[[0,[n,query_box_1],[[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,b],"|",[v,c]]]]]]]).
lp2sm_en2test(124,[[["n","query box 1"],[["v",a],["v",b],["v",c],["v",d]],":-",[[["n","equals 41"],[[[["v",a],"|",["v",d]],["v",c],"|",["v",b]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[[v,a],"|",[v,d]],[v,c],"|",[v,b]]]]]]]).
lp2sm_en2test(125,[[["n","query box 1"],[["v",a],["v",b],["v",c]],":-",[[["n","equals 41"],[[[["v",a],["v",c]],"|",["v",b]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[[v,a],[v,c]],"|",[v,b]]]]]]]).
lp2sm_en2test(126,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","equals 41"],[[["v",a],"|",["v",b]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a],"|",[v,b]]]]]]]).
lp2sm_en2test(127,[[["n","query box 1"],[["v",a],["v",b],["v",c],["v",d]],":-",[[["n","equals 41"],[[["v",a],["v",c],"|",["v",b],["v",d]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a],[v,c],"|",[v,b],[v,d]]]]]]]).
lp2sm_en2test(128,[[["n","query box 1"],[["v",a],["v",b],["v",c]],":-",[[["n","equals 41"],[[[["v",a]],["v",c],"|",["v",b]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[[v,a]],[v,c],"|",[v,b]]]]]]]).
lp2sm_en2test(129,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","equals 41"],[[["v",a],"|",["v",b]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a],"|",[v,b]]]]]]]).
lp2sm_en2test(130,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","equals 41"],[[["v",a],"|",[["v",b]]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a],"|",[[v,b]]]]]]]]).
lp2sm_en2test(131,[[["n","query box 1"],[["v",a]],":-",[[["n","equals 41"],[[["v",a]]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a]]]]]]]).
lp2sm_en2test(132,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","equals 41"],[[["v",a],["v",b]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a],[v,b]]]]]]]).
lp2sm_en2test(133,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","equals 41"],[[["v",a],["v",b]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a],[v,b]]]]]]]).
lp2sm_en2test(134,[[["n","query box 1"],[["v",a],["v",b],["v",c],["v",d]],":-",[[["n","equals 41"],[[["v",a],["v",c],"|",["v",b],"|",["v",d]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a],[v,c],"|",[v,b],"|",[v,d]]]]]]]).
lp2sm_en2test(135,[[["n","query box 1"],[],":-",[[["n","equals 41"],[[1,2,3]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[1,2,3]]]]]]).
lp2sm_en2test(136,[[["n","query box 1"],[["v",a],["v",b],["v",d]],":-",[[["n","equals 41"],[[["v",a],"|",[["v",b],"|",["v",d]]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[v,a],"|",[[v,b],"|",[v,d]]]]]]]]).
lp2sm_en2test(137,[[["n","query box 1"],[["v",b]],":-",[[["n","equals 41"],[["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,b]]]]]]).
lp2sm_en2test(138,[[["n","query box 1"],[],":-",[[["n","equals 41"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[]]]]]).
lp2sm_en2test(139,[[["n","query box 1"],[["v",a],["v",d]],":-",[[["n","append 1"],[["v",a],["v",d]]]]]],[[0,[n,query_box_1],[[v,a],[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append1],[[v,a],[v,d]]]]]]).
lp2sm_en2test(140,[[["n","query box 1"],[["v",b]],":-",[[["n","equals 41"],[[1,2,3],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[1,2,3],[v,b]]]]]]).
lp2sm_en2test(141,[[["n","query box 1"],[["v",b]],":-",[[["n","equals 41"],[[1,2,3],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[1,2,3],[v,b]]]]]]).
lp2sm_en2test(142,[[["n","query box 1"],[["v",b]],":-",[[["n","equals 41"],[[1,2,3],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[1,2,3],[v,b]]]]]]).
lp2sm_en2test(143,[[["n","query box 1"],[["v",b]],":-",[[["n","equals 41"],[[1,2,3],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[1,2,3],[v,b]]]]]]).
lp2sm_en2test(144,[[["n","query box 1"],[["v",b]],":-",[[["n","equals 41"],[[1,2,3],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[1,2,3],[v,b]]]]]]).
lp2sm_en2test(145,[[["n","query box 1"],[["v",c]],":-",[[["n","equals 41"],[[[1,2,3]],["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[1,2,3]],[v,c]]]]]]).
lp2sm_en2test(146,[[["n","query box 1"],[["v",c]],":-",[[["n","equals 41"],[[[1,2,3],4,5],["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[1,2,3],4,5],[v,c]]]]]]).
lp2sm_en2test(147,[[["n","query box 1"],[["v",c]],":-",[[["n","equals 41"],[["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,c]]]]]]).
lp2sm_en2test(148,[[["n","query box 1"],[["v",c]],":-",[[["n","equals 41"],[["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,c]]]]]]).
lp2sm_en2test(149,[[["n","query box 1"],[["v",b],["v",c]],":-",[[["n","equals 41"],[[[1,2,3]],["v",b],["v",c]]]]]],[[0,[n,query_box_1],[[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[1,2,3]],[v,b],[v,c]]]]]]).
lp2sm_en2test(150,[[["n","query box 1"],[["v",c]],":-",[[["n","equals 41"],[[[4,5,6]],["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[4,5,6]],[v,c]]]]]]).
lp2sm_en2test(151,[[["n","query box 1"],[["v",c]],":-",[[["n","equals 41"],[[[6,2,3],[5]],["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[6,2,3],[5]],[v,c]]]]]]).
lp2sm_en2test(152,[[["n","query box 1"],[["v",c]],":-",[[["n","equals 41"],[[6,2,3],[1,2,3],["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[6,2,3],[1,2,3],[v,c]]]]]]).
lp2sm_en2test(153,[[["n","query box 1"],[["v",c]],":-",[[["n","equals 41"],[[[4,5,6]],["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[4,5,6]],[v,c]]]]]]).
lp2sm_en2test(154,[[["n","query box 1"],[["v",c]],":-",[[["n","equals 41"],[[[4,5,6]],["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[[4,5,6]],[v,c]]]]]]).
lp2sm_en2test(155,[[["n","query box 1"],[["v",a]],":-",[[["n","equals 41"],[["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a]]]]]]).
lp2sm_en2test(156,[[["n","query box 1"],[["v",a],["v",b],["v",c]],":-",[[["n","equals 42"],[["v",a],[["v",b],["v",c]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals42],[[v,a],[[v,b],[v,c]]]]]]]).
lp2sm_en2test(157,[[["n","query box 1"],[["v",a]],":-",[[["n","equals 41"],[["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a]]]]]]).
lp2sm_en2test(158,[[["n","query box 1"],[["v",a]],":-",[[["n","equals 41"],[["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a]]]]]]).
lp2sm_en2test(159,[[["n","query box 1"],[],":-",[[["n","equals 41"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[]]]]]).
lp2sm_en2test(160,[[["n","query box 1"],[["v",c]],":-",[[["n","function"],[1,1,["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[1,1,[v,c]]]]]]).
lp2sm_en2test(161,[[["n","query box 1"],[["v",c]],":-",[[["n","function"],[1,1,["v",c]]]]]],[[0,[n,query_box_1],[[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[1,1,[v,c]]]]]]).
lp2sm_en2test(162,[[["n","query box 1"],[["v",a],["v",b],["v",c]],":-",[[["n","equals 41"],[["v",a],["v",b],["v",c]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals41],[[v,a],[v,b],[v,c]]]]]]).
lp2sm_en2test(163,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","function 1"],[["v",a],["v",a],["v",b],["v",b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[v,a],[v,a],[v,b],[v,b]]]]]]).
lp2sm_en2test(164,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","function 1"],[["v",a],["v",a],["v",b],["v",b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[v,a],[v,a],[v,b],[v,b]]]]]]).
lp2sm_en2test(165,[[["n","query box 1"],[["v",a],["v",b]],":-",[[[["n","equals 4"],[["v",a],[1,2]]],[["n","equals 4"],[["v",b],[0,"|",["v",a]]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,"[]"]],[1,[on_true,2],[go_after,-],[on_false,[fail_function,0]],[go_to_predicates,-],[n,equals4],[[v,a],[1,2]]],[2,[on_true,[exit_function,0]],[go_after,-],[on_false,[fail_function,0]],[go_to_predicates,-],[n,equals4],[[v,b],[0,"|",[v,a]]]]]]]).
lp2sm_en2test(166,[[["n","query box 1"],[["v",a],["v",b]],":-",[[[["n","equals 4"],[["v",a],0]],[["n","equals 4"],[["v",b],[["v",a],"|",[1,2]]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,"[]"]],[1,[on_true,2],[go_after,-],[on_false,[fail_function,0]],[go_to_predicates,-],[n,equals4],[[v,a],0]],[2,[on_true,[exit_function,0]],[go_after,-],[on_false,[fail_function,0]],[go_to_predicates,-],[n,equals4],[[v,b],[[v,a],"|",[1,2]]]]]]]).
lp2sm_en2test(167,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","equals 4"],[[["v",a],"|",["v",b]],[1,"|",2]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals4],[[[v,a],"|",[v,b]],[1,"|",2]]]]]]).
lp2sm_en2test(168,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","function 1"],[["v",a],"|",["v",b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[v,a],"|",[v,b]]]]]]).
lp2sm_en2test(169,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","function 1"],[["v",a],["v",b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[v,a],[v,b]]]]]]).
lp2sm_en2test(170,[[["n","query box 1"],[["v",a]],":-",[[["n","function 1"],[["v",a],["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[v,a],[v,a]]]]]]).
lp2sm_en2test(171,[[["n","query box 1"],[],":-",[[["n","function 1"],[[[]]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[[]]]]]]]).
lp2sm_en2test(172,[[["n","query box 1"],[],":-",[[["n","equals 4"],[[],[[]]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals4],[[],[[]]]]]]]).
lp2sm_en2test(173,[[["n","query box 1"],[["v",a],["v",b],["v",c],["v",d],["v",e]],":-",[[["n","equals 4"],[[["v",d],["v",d],["v",a],["v",b],["v",a]],[["v",e],["v",c],1,["v",c],["v",b]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d],[v,e]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals4],[[[v,d],[v,d],[v,a],[v,b],[v,a]],[[v,e],[v,c],1,[v,c],[v,b]]]]]]]).
lp2sm_en2test(174,[[["n","query box 1"],[["v",a],["v",c],["v",e]],":-",[[["n","function 1"],[["v",e],["v",c],["v",a],["v",c],["v",a]]]]]],[[0,[n,query_box_1],[[v,a],[v,c],[v,e]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[v,e],[v,c],[v,a],[v,c],[v,a]]]]]]).
lp2sm_en2test(175,[[["n","query box 1"],[["v",a],["v",b],["v",c],["v",d],["v",e1],["v",e2],["v",f],["v",f2]],":-",[[["n","equals 4"],[[[["v",e1],["v",e2]],["v",c],["v",a],["v",c],["v",a],["v",e1]],[["v",d],["v",d],[[1,1],[1,1]],["v",b],["v",b],[["v",f],["v",f2]]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d],[v,e1],[v,e2],[v,f],[v,f2]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals4],[[[[v,e1],[v,e2]],[v,c],[v,a],[v,c],[v,a],[v,e1]],[[v,d],[v,d],[[1,1],[1,1]],[v,b],[v,b],[[v,f],[v,f2]]]]]]]]).
lp2sm_en2test(176,[[["n","query box 1"],[["v",a],["v",c],["v",e1],["v",e2]],":-",[[["n","function 1"],[[["v",e1],["v",e2]],["v",c],["v",a],["v",c],["v",a],["v",e1]]]]]],[[0,[n,query_box_1],[[v,a],[v,c],[v,e1],[v,e2]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[[v,e1],[v,e2]],[v,c],[v,a],[v,c],[v,a],[v,e1]]]]]]).
lp2sm_en2test(177,[[["n","query box 1"],[["v",a],["v",b],["v",c],["v",d],["v",e1],["v",e2],["v",f],["v",f2]],":-",[[["n","equals 4"],[[[["v",e1],["v",e2]],"|",[["v",c],["v",a],["v",c],["v",a],["v",e1]]],[["v",d],"|",[["v",d],[[1,1],[1,1]],["v",b],["v",b],[["v",f],["v",f2]]]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d],[v,e1],[v,e2],[v,f],[v,f2]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,equals4],[[[[v,e1],[v,e2]],"|",[[v,c],[v,a],[v,c],[v,a],[v,e1]]],[[v,d],"|",[[v,d],[[1,1],[1,1]],[v,b],[v,b],[[v,f],[v,f2]]]]]]]]]).
lp2sm_en2test(178,[[["n","query box 1"],[["v",a],["v",c],["v",e1],["v",e2]],":-",[[["n","function 1"],[[["v",e1],["v",e2]],"|",[["v",c],["v",a],["v",c],["v",a],["v",e1]]]]]]],[[0,[n,query_box_1],[[v,a],[v,c],[v,e1],[v,e2]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function1],[[[v,e1],[v,e2]],"|",[[v,c],[v,a],[v,c],[v,a],[v,e1]]]]]]]).
lp2sm_en2test(179,[[["n","query box 1"],[],":-",[[["n","add 0"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[]]]]]).
lp2sm_en2test(180,[[["n","query box 1"],[],":-",[[["n","add 0"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,add0],[]]]]]).
lp2sm_en2test(181,[[["n","query box 1"],[["v",b]],":-",[[["n",1],[[1,2],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,1],[[1,2],[v,b]]]]]]).
lp2sm_en2test(182,[[["n","query box 1"],[["v",b]],":-",[[["n","member try"],[[1,2,3],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,member_try],[[1,2,3],[v,b]]]]]]).
lp2sm_en2test(183,[[["n","query box 1"],[],":-",[[["n","not 1"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,not1],[]]]]]).
lp2sm_en2test(184,[[["n","query box 1"],[],":-",[[["n","not 1"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,not1],[]]]]]).
lp2sm_en2test(185,[[["n","query box 1"],[],":-",[[["n","not 1"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,not1],[]]]]]).
lp2sm_en2test(186,[[["n","query box 1"],[],":-",[[["n","brackets 1"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,brackets1],[]]]]]).
lp2sm_en2test(187,[[["n","query box 1"],[],":-",[[["n","brackets 1"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,brackets1],[]]]]]).
lp2sm_en2test(188,[[["n","query box 1"],[],":-",[[["n","brackets 1"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,brackets1],[]]]]]).
lp2sm_en2test(189,[[["n","query box 1"],[],":-",[[["n","brackets 1"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,brackets1],[]]]]]).
lp2sm_en2test(190,[[["n","query box 1"],[],":-",[[["n","true"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,true],[]]]]]).
lp2sm_en2test(191,[[["n","query box 1"],[],":-",[[["n","not 1"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,not1],[]]]]]).
lp2sm_en2test(192,[[["n","query box 1"],[["v",b]],":-",[[["n","find all 1"],[[1,2,3],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[1,2,3],[v,b]]]]]]).
lp2sm_en2test(193,[[["n","query box 1"],[["v",b]],":-",[[["n","find all 1"],[[[[1,2,3,4]]],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[[[1,2,3,4]]],[v,b]]]]]]).
lp2sm_en2test(194,[[["n","query box 1"],[["v",a]],":-",[[["n","cut 1"],[["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,cut1],[[v,a]]]]]]).
lp2sm_en2test(195,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","find all"],[["v",b],[[["n","or 12"],[["v",b]]]],["v",a]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[v,b],[v,a]]],[1,[on_true,2],[go_after,[findall_exit_function,0]],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,"[]"]],[2,[on_true,[exit_function,1]],[go_after,-],[on_false,[fail_function,1]],[go_to_predicates,-],[n,or12],[[v,b]]]]]]).
lp2sm_en2test(196,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","find all"],[["v",b],[[["n","or 12"],[["v",b]]]],["v",a]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[v,b],[v,a]]],[1,[on_true,2],[go_after,[findall_exit_function,0]],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,"[]"]],[2,[on_true,[exit_function,1]],[go_after,-],[on_false,[fail_function,1]],[go_to_predicates,-],[n,or12],[[v,b]]]]]]).
lp2sm_en2test(197,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","find all"],[["v",b],[[["n","member"],[["v",b],[1]]]],["v",a]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[v,b],[v,a]]],[1,[on_true,2],[go_after,[findall_exit_function,0]],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,"[]"]],[2,[on_true,[exit_function,1]],[go_after,-],[on_false,[fail_function,1]],[go_to_predicates,-],[n,member],[[v,b],[1]]]]]]).
lp2sm_en2test(198,[[["n","query box 1"],[],":-",[[["n","function"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[]]]]]).
lp2sm_en2test(199,[[["n","query box 1"],[["v",a]],":-",[[["n","function"],[1,1,["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[1,1,[v,a]]]]]]).
lp2sm_en2test(200,[[["n","query box 1"],[],":-",[[["n","function"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[]]]]]).
lp2sm_en2test(201,[[["n","query box 1"],[],":-",[[["n","function"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[]]]]]).
lp2sm_en2test(202,[[["n","query box 1"],[],":-",[[["n","function"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[]]]]]).
lp2sm_en2test(203,[[["n","query box 1"],[],":-",[[["n","traverse"],[2,6]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,traverse],[2,6]]]]]).
lp2sm_en2test(204,[[["n","query box 1"],[],":-",[[["n","function"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,function],[]]]]]).
lp2sm_en2test(205,[[["n","query box 1"],[["v",b]],":-",[[["n","find all 1"],[[[1,2],[1,4]],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[[1,2],[1,4]],[v,b]]]]]]).
lp2sm_en2test(206,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","find all"],[["v",b],[[["n","or 12"],[1,["v",b]]]],["v",a]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[v,b],[v,a]]],[1,[on_true,2],[go_after,[findall_exit_function,0]],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,"[]"]],[2,[on_true,[exit_function,1]],[go_after,-],[on_false,[fail_function,1]],[go_to_predicates,-],[n,or12],[1,[v,b]]]]]]).
lp2sm_en2test(207,[[["n","query box 1"],[["v",b1]],":-",[[["n","find all 1"],[[1,2],["v",b1]]]]]],[[0,[n,query_box_1],[[v,b1]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[1,2],[v,b1]]]]]]).
lp2sm_en2test(208,[[["n","query box 1"],[["v",b],["v",c],["v",g]],":-",[[["n","reverse 1"],[[1,2,3],[],["v",c],["v",b],["v",g]]]]]],[[0,[n,query_box_1],[[v,b],[v,c],[v,g]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,reverse1],[[1,2,3],[],[v,c],[v,b],[v,g]]]]]]).
lp2sm_en2test(209,[[["n","query box 1"],[["v",a]],":-",[[["n","a"],[["a","b"],"",["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,a],[["a","b"],"",[v,a]]]]]]).
lp2sm_en2test(210,[[["n","query box 1"],[],":-",[[["n","grammar 1"],[[apple]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],[[apple]]]]]]).
lp2sm_en2test(211,[[["n","query box 1"],[],":-",[[["n","grammar 1"],[[apple,banana]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],[[apple,banana]]]]]]).
lp2sm_en2test(212,[[["n","query box 1"],[],":-",[[["n","grammar 1"],[[apple,banana,carrot]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,grammar1],[[apple,banana,carrot]]]]]]).
lp2sm_en2test(213,[[["n","query box 1"],[["v",a]],":-",[[["n","reverse 1"],[[1,2,3],[],["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,reverse1],[[1,2,3],[],[v,a]]]]]]).
lp2sm_en2test(214,[[["n","query box 1"],[["v",a]],":-",[[["n","append 1"],[[1,2,3],[],["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append1],[[1,2,3],[],[v,a]]]]]]).
lp2sm_en2test(215,[[["n","query box 1"],[["v",a],["v",b],["v",c]],":-",[[["n","find all"],[[["v",a],["v",b]],[["n","append"],[["v",a],["v",b],[1,2,3]]],["v",c]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[[v,a],[v,b]],[v,c]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,append],[[v,a],[v,b],[1,2,3]]]]]]).
lp2sm_en2test(216,[[["n","query box 1"],[],":-",[[["n","traverse"],[2,8]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,traverse],[2,8]]]]]).
lp2sm_en2test(217,[[["n","query box 1"],[],":-",[[["n","traverse"],[2,6]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,traverse],[2,6]]]]]).
lp2sm_en2test(218,[[["n","query box 1"],[["v",b]],":-",[[["n","find all 1"],[[[1,2],[3,4]],["v",b]]]]]],[[0,[n,query_box_1],[[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,findall1],[[[1,2],[3,4]],[v,b]]]]]]).
lp2sm_en2test(219,[[["n","query box 1"],[["v",a],["v",b],["v",c]],":-",[[["n","find all"],[[["v",a],["v",b]],[["n","concatenate strings"],[["v",a],["v",b],"abc"]],["v",c]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[[v,a],[v,b]],[v,c]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,stringconcat],[[v,a],[v,b],"abc"]]]]]).
lp2sm_en2test(220,[[["n","query box 1"],[],":-",[[["n","concatenate strings"],["a","b","ab"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,stringconcat],["a","b","ab"]]]]]).
lp2sm_en2test(221,[[["n","query box 1"],[["v",a]],":-",[[["n","concatenate strings"],["a","b",["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,stringconcat],["a","b",[v,a]]]]]]).
lp2sm_en2test(222,[[["n","query box 1"],[["v",a]],":-",[[["n","concatenate strings"],["a",["v",a],"ab"]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,stringconcat],["a",[v,a],"ab"]]]]]).
lp2sm_en2test(223,[[["n","query box 1"],[["v",a]],":-",[[["n","concatenate strings"],[["v",a],"b","ab"]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,stringconcat],[[v,a],"b","ab"]]]]]).
lp2sm_en2test(224,[[["n","query box 1"],[],":-",[[["n","append"],[["a"],["b"],["a","b"]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append],[["a"],["b"],["a","b"]]]]]]).
lp2sm_en2test(225,[[["n","query box 1"],[["v",a]],":-",[[["n","append"],[["a"],["b"],["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append],[["a"],["b"],[v,a]]]]]]).
lp2sm_en2test(226,[[["n","query box 1"],[["v",a]],":-",[[["n","append"],[["a"],["v",a],["a","b"]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append],[["a"],[v,a],["a","b"]]]]]]).
lp2sm_en2test(227,[[["n","query box 1"],[["v",a]],":-",[[["n","append"],[["v",a],["b"],["a","b"]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append],[[v,a],["b"],["a","b"]]]]]]).
lp2sm_en2test(228,[[["n","query box 1"],[["v",a],["v",b],["v",c]],":-",[[["n","find all"],[[["v",a],["v",b]],[["n","append"],[["v",a],["v",b],["a","b","c"]]],["v",c]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[[v,a],[v,b]],[v,c]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,append],[[v,a],[v,b],["a","b","c"]]]]]]).
lp2sm_en2test(229,[[["n","query box 1"],[["v",a],["v",c]],":-",[[["n","find all"],[["v",a],[["n","member"],[["v",a],["a","b"]]],["v",c]]]]]],[[0,[n,query_box_1],[[v,a],[v,c]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[v,a],[v,c]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,member],[[v,a],["a","b"]]]]]]).
lp2sm_en2test(230,[[["n","query box 1"],[["v",a],["v",b]],":-",[[["n","append"],[["a"],["v",a],["v",b]]]]]],[[0,[n,query_box_1],[[v,a],[v,b]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append],[["a"],[v,a],[v,b]]]]]]).
lp2sm_en2test(231,[[["n","query box 1"],[["v",a],["v",c],["v",d]],":-",[[["n","find all"],[[["v",a],["v",c]],[["n","append"],[["v",a],["a","b"],["v",c]]],["v",d]]]]]],[[0,[n,query_box_1],[[v,a],[v,c],[v,d]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[[v,a],[v,c]],[v,d]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,append],[[v,a],["a","b"],[v,c]]]]]]).
lp2sm_en2test(232,[[["n","query box 1"],[],":-",[[["n","member"],["a",["a","b"]]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,member],["a",["a","b"]]]]]]).
lp2sm_en2test(233,[[["n","query box 1"],[["v",a],["v",d]],":-",[[["n","find all"],[["v",a],[["n","member"],["a",["v",a]]],["v",d]]]]]],[[0,[n,query_box_1],[[v,a],[v,d]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[v,a],[v,d]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,member],["a",[v,a]]]]]]).
lp2sm_en2test(234,[[["n","query box 1"],[["v",a]],":-",[[["n","member"],[["v",a],["a","b"]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,member],[[v,a],["a","b"]]]]]]).
lp2sm_en2test(235,[[["n","query box 1"],[["v",a],["v",b],["v",d]],":-",[[["n","find all"],[[["v",a],["v",b]],[["n","member"],[["v",b],["v",a]]],["v",d]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,d]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[[v,a],[v,b]],[v,d]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,member],[[v,b],[v,a]]]]]]).
lp2sm_en2test(236,[[["n","query box 1"],[["v",a],["v",b],["v",c],["v",d]],":-",[[["n","find all"],[[["v",a],["v",b],["v",c]],[["n","append"],[["v",a],["a"],[["v",b],"|",["v",c]]]],["v",d]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[[v,a],[v,b],[v,c]],[v,d]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,append],[[v,a],["a"],[[v,b],"|",[v,c]]]]]]]).
lp2sm_en2test(237,[[["n","query box 1"],[["v",a],["v",b],["v",c],["v",d]],":-",[[["n","find all"],[[["v",a],["v",b],["v",c]],[["n","append"],[["v",a],["b",["v",b]],["v",c]]],["v",d]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[[v,a],[v,b],[v,c]],[v,d]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,append],[[v,a],["b",[v,b]],[v,c]]]]]]).
lp2sm_en2test(238,[[["n","query box 1"],[["v",a],["v",b],["v",c],["v",d]],":-",[[["n","find all"],[[["v",a],["v",b],["v",c]],[["n","append"],[["v",a],["v",b],["v",c]]],["v",d]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c],[v,d]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,findall],[[[v,a],[v,b],[v,c]],[v,d]]],[1,[on_true,[findall_exit_function,0]],[go_after,-],[on_false,[findall_fail_function,0]],[go_to_predicates,-],[n,append],[[v,a],[v,b],[v,c]]]]]]).
lp2sm_en2test(239,[[["n","query box 1"],[["v",a],["v",b],["v",c]],":-",[[["n","append"],[["v",a],["b",["v",b]],[["v",c]]]]]]],[[0,[n,query_box_1],[[v,a],[v,b],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append],[[v,a],["b",[v,b]],[[v,c]]]]]]]).
lp2sm_en2test(240,[[["n","query box 1"],[["v",a],["v",c]],":-",[[["n","append"],[["v",a],["b"],[["v",c]]]]]]],[[0,[n,query_box_1],[[v,a],[v,c]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append],[[v,a],["b"],[[v,c]]]]]]]).
lp2sm_en2test(241,[[["n","query box 1"],[["v",a]],":-",[[["n","reverse 1"],[["v",a],[],[3,2,1]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,reverse1],[[v,a],[],[3,2,1]]]]]]).
lp2sm_en2test(242,[[["n","query box 1"],[["v",a]],":-",[[["n","append 1"],[["v",a],[],[1,2,3]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,append1],[[v,a],[],[1,2,3]]]]]]).
lp2sm_en2test(243,[[["n","query box 1"],[["v",a]],":-",[[["n","back propagate"],[["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,back_propagate],[[v,a]]]]]]).
lp2sm_en2test(244,[[["n","query box 1"],[["v",d]],":-",[[["n","foldl 1"],[["n","stringconcata 1"],["a","b"],"",["v",d]]]]]],[[0,[n,query_box_1],[[v,d]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,foldl1],[[n,stringconcata1],["a","b"],"",[v,d]]]]]]).
lp2sm_en2test(245,[[["n","query box 1"],[["v",a],["v",x],["v",y],["v",z]],":-",[[[["n","equals 4"],[["v",a],"abc"]],[["n","string chars"],[["v",a],[["v",x],["v",y],["v",z]]]]]]]],[[0,[n,query_box_1],[[v,a],[v,x],[v,y],[v,z]],":-",[[0,[on_true,1],[go_after,-2],[on_false,-3],[go_to_predicates,-],[n,"[]"]],[1,[on_true,2],[go_after,-],[on_false,[fail_function,0]],[go_to_predicates,-],[n,equals4],[[v,a],"abc"]],[2,[on_true,[exit_function,0]],[go_after,-],[on_false,[fail_function,0]],[go_to_predicates,-],[n,string_chars],[[v,a],[[v,x],[v,y],[v,z]]]]]]]).
lp2sm_en2test(246,[[["n","query box 1"],[],":-",[[["n","test 2"]]]]],[[0,[n,query_box_1],[],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,test2],[]]]]]).
lp2sm_en2test(247,[[["n","query box 1"],[["v",a]],":-",[[["n","test 2"],[["v",a]]]]]],[[0,[n,query_box_1],[[v,a]],":-",[[0,[on_true,-2],[go_after,-],[on_false,-3],[go_to_predicates,-],[n,test2],[[v,a]]]]]]).




bt-lp2sm_en2test(Lang,BL,RL) :-
	
findall(A,(lp2sm_en2test(N,I,O),((retractall(lang(_)),assertz(lang("en")),sm_to_lp(O,I2),trans_alg(I2,"en",Lang,I3),I3=I)->(writeln([bt-lp2sm_en2test,N,passed]),A=passed);(writeln([bt-lp2sm_en2test,N,failed]),A=failed))),B),
length(B,BL),
findall(_,member(passed,B),R),length(R,RL),!.

bt-lp2sm_en2test1(Lang,N,A) :-
lp2sm_en2test(N,I,O),((retractall(lang(_)),assertz(lang("en")),sm_to_lp(O,I2),trans_alg(I2,"en",Lang,I3),I=I3)->(writeln([bt-lp2sm_en2test,N,passed]),A=passed);(writeln([bt-lp2sm_en2test,N,failed]),A=failed)),!.


%?- test(1,Q,F,R),query_box(Q,Query1,Functions,Functions1),convert_to_grammar_part1(Functions1,[],Functions2,_),add_line_numbers_to_algorithm1(Functions2,Functions2a),find_pred_numbers(Functions2a,[]                                          ,Pred_numbers),retractall(pred_numbers(_)),assertz(pred_numbers(Pred_numbers)),find_state_machine1(Functions2a,Functions3,Pred_numbers),writeln(Functions2),sm_to_lp(Functions3,Functions4),writeln(Functions4).


% to do
% back-translation, on I not O


bt1-lp2sm_en2test(Lang,BL,RL) :-
findall(A,(lp2sm_en2test(N,I,O),(((once((trans_alg(I,Lang,"en",I2),retractall(lang(_)),assertz(lang("en")),add_line_numbers_to_algorithm1(I2,Functions2a),find_pred_numbers(Functions2a,[]                                          ,Pred_numbers),retractall(pred_numbers(_)),assertz(pred_numbers(Pred_numbers)),find_state_machine1(Functions2a,O1,Pred_numbers))),O=O1)->(writeln([bt1-lp2sm_en2test,N,passed]),A=passed);(writeln([bt1-lp2sm_en2test,N,failed]),A=failed)))),B),
length(B,BL),
findall(_,member(passed,B),R),length(R,RL),!.

bt1-lp2sm_en2test1(Lang,N,A) :-
lp2sm_en2test(N,I,O),(((once((trans_alg(I,Lang,"en",I2),retractall(lang(_)),assertz(lang("en")),add_line_numbers_to_algorithm1(I2,Functions2a),find_pred_numbers(Functions2a,[]                                          ,Pred_numbers),retractall(pred_numbers(_)),assertz(pred_numbers(Pred_numbers)),find_state_machine1(Functions2a,O1,Pred_numbers))),O=O1)->(writeln([bt1-lp2sm_en2test,N,passed]),A=passed);(writeln([bt1-lp2sm_en2test,N,failed]),A=failed))),!.
